{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  data() {\n    return {\n      cartItems: [] // Initialize an empty array for cart items\n    };\n  },\n  computed: {\n    // Calculate the total number of items in the cart\n    totalItems() {\n      return this.cartItems.reduce((sum, item) => sum + item.quantity, 0);\n    },\n    // Calculate the total cost of items in the cart\n    totalCost() {\n      return this.cartItems.reduce((sum, item) => sum + (Number(item.price) || 0) * item.quantity, 0);\n    }\n  },\n  methods: {\n    // Fetch cart items from local storage\n    fetchCartItems() {\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n      this.cartItems = cart.map(item => ({\n        ...item,\n        price: Number(item.price) // Ensure price is a number\n      }));\n    },\n    // Increment the quantity of an item\n    incrementQuantity(item) {\n      item.quantity++;\n      this.updateCartInStorage();\n    },\n    // Decrement the quantity of an item (minimum of 1)\n    decrementQuantity(item) {\n      if (item.quantity > 1) {\n        item.quantity--;\n        this.updateCartInStorage();\n      }\n    },\n    // Remove an item from the cart\n    removeItem(itemId) {\n      this.cartItems = this.cartItems.filter(item => item.id !== itemId);\n      this.updateCartInStorage();\n    },\n    // Update the cart data in local storage\n    updateCartInStorage() {\n      localStorage.setItem(\"cart\", JSON.stringify(this.cartItems));\n    },\n    // Handle the checkout process\n    checkout() {\n      alert(\"Proceeding to checkout!\");\n      // Implement checkout logic here\n    }\n  },\n  // Fetch the cart items when the component is created\n  created() {\n    this.fetchCartItems();\n  }\n};","map":{"version":3,"names":["data","cartItems","computed","totalItems","reduce","sum","item","quantity","totalCost","Number","price","methods","fetchCartItems","cart","JSON","parse","localStorage","getItem","map","incrementQuantity","updateCartInStorage","decrementQuantity","removeItem","itemId","filter","id","setItem","stringify","checkout","alert","created"],"sources":["C:\\laragon\\www\\project_appdev\\Frontend\\src\\views\\cart.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-page\">\r\n    <div class=\"cart-container\">\r\n      <!-- Shopping Cart Section -->\r\n      <div class=\"cart\">\r\n        <h2 class=\"cart-title\">Shopping Cart</h2>\r\n        <p class=\"cart-items-count\">{{ totalItems }} items</p>\r\n\r\n        <div v-if=\"cartItems.length > 0\" class=\"cart-items-list\">\r\n          <!-- Loop through cart items -->\r\n          <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\r\n            <img :src=\"item.image\" alt=\"Item image\" class=\"cart-item-image\" />\r\n            <div class=\"cart-item-details\">\r\n              <h3 class=\"item-name\">{{ item.name }}</h3>\r\n              <p class=\"item-price\">€{{ (Number(item.price) || 0).toFixed(2) }}</p>\r\n              <div class=\"quantity-controls\">\r\n                <button @click=\"decrementQuantity(item)\">-</button>\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"item.quantity\"\r\n                  min=\"1\"\r\n                  class=\"quantity-input\"\r\n                />\r\n                <button @click=\"incrementQuantity(item)\">+</button>\r\n              </div>\r\n            </div>\r\n            <button @click=\"removeItem(item.id)\" class=\"remove-button\">✕</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else class=\"empty-cart\">\r\n          <p>Your cart is empty. Start shopping now!</p>\r\n        </div>\r\n\r\n        <a href=\"/product\" class=\"back-to-shop\">← Back to shop</a>\r\n      </div>\r\n\r\n      <!-- Summary Section -->\r\n      <div class=\"summary\">\r\n        <h2 class=\"summary-title\">Summary</h2>\r\n        <div class=\"summary-item\">\r\n          <span>ITEMS {{ totalItems }}</span>\r\n          <span>€{{ totalCost.toFixed(2) }}</span>\r\n        </div>\r\n        <div class=\"summary-item\">\r\n          <label for=\"shipping\">SHIPPING</label>\r\n          <select id=\"shipping\" class=\"shipping-select\">\r\n            <option value=\"5\">Standard Delivery - €5.00</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"summary-item\">\r\n          <label for=\"give-code\">GIVE CODE</label>\r\n          <div class=\"give-code-container\">\r\n            <input type=\"text\" id=\"give-code\" placeholder=\"Enter your code\" />\r\n            <button>→</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"summary-total\">\r\n          <span>TOTAL PRICE</span>\r\n          <span>€{{ (totalCost + 5).toFixed(2) }}</span>\r\n        </div>\r\n        <button @click=\"checkout\" class=\"checkout-button\">CHECKOUT</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartItems: [], // Initialize an empty array for cart items\r\n    };\r\n  },\r\n  computed: {\r\n    // Calculate the total number of items in the cart\r\n    totalItems() {\r\n      return this.cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n    },\r\n    // Calculate the total cost of items in the cart\r\n    totalCost() {\r\n      return this.cartItems.reduce(\r\n        (sum, item) => sum + (Number(item.price) || 0) * item.quantity,\r\n        0\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    // Fetch cart items from local storage\r\n    fetchCartItems() {\r\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n      this.cartItems = cart.map((item) => ({\r\n        ...item,\r\n        price: Number(item.price), // Ensure price is a number\r\n      }));\r\n    },\r\n    // Increment the quantity of an item\r\n    incrementQuantity(item) {\r\n      item.quantity++;\r\n      this.updateCartInStorage();\r\n    },\r\n    // Decrement the quantity of an item (minimum of 1)\r\n    decrementQuantity(item) {\r\n      if (item.quantity > 1) {\r\n        item.quantity--;\r\n        this.updateCartInStorage();\r\n      }\r\n    },\r\n    // Remove an item from the cart\r\n    removeItem(itemId) {\r\n      this.cartItems = this.cartItems.filter((item) => item.id !== itemId);\r\n      this.updateCartInStorage();\r\n    },\r\n    // Update the cart data in local storage\r\n    updateCartInStorage() {\r\n      localStorage.setItem(\"cart\", JSON.stringify(this.cartItems));\r\n    },\r\n    // Handle the checkout process\r\n    checkout() {\r\n      alert(\"Proceeding to checkout!\");\r\n      // Implement checkout logic here\r\n    },\r\n  },\r\n  // Fetch the cart items when the component is created\r\n  created() {\r\n    this.fetchCartItems();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cart-page {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.cart-container {\r\n  display: flex;\r\n  width: 90%;\r\n  max-width: 1200px;\r\n  gap: 20px;\r\n}\r\n\r\n.cart {\r\n  flex: 2;\r\n  background-color: #fff;\r\n  padding: 4vh 5vh;\r\n  border-radius: 1rem;\r\n  box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n}\r\n\r\n@media (max-width: 767px) {\r\n  .cart {\r\n    padding: 4vh;\r\n    border-top-left-radius: unset;\r\n    border-bottom-left-radius: unset;\r\n  }\r\n}\r\n\r\n.cart-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 5vh;\r\n}\r\n\r\n.cart-items-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.cart-item-image {\r\n  width: 3.5rem;\r\n  height: 3.5rem;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-details {\r\n  flex: 1;\r\n  margin-left: 1vh;\r\n}\r\n\r\n.item-name {\r\n  font-size: 1rem;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.item-price {\r\n  color: #888;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.quantity-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.remove-button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: #888;\r\n  cursor: pointer;\r\n}\r\n\r\n.remove-button:hover {\r\n  color: #f00;\r\n}\r\n\r\n.back-to-shop {\r\n  display: inline-block;\r\n  margin-top: 4.5rem;\r\n  color: #141516;\r\n  text-decoration: none;\r\n}\r\n\r\n.back-to-shop:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.summary {\r\n  flex: 1;\r\n  background-color: #ddd;\r\n  padding: 4vh;\r\n  color: rgb(65, 65, 65);\r\n  border-top-right-radius: 1rem;\r\n  border-bottom-right-radius: 1rem;\r\n}\r\n\r\n@media (max-width: 767px) {\r\n  .summary {\r\n    border-top-right-radius: unset;\r\n    border-bottom-left-radius: 1rem;\r\n  }\r\n}\r\n\r\n.summary-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 4vh;\r\n}\r\n\r\n.summary-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.shipping-select {\r\n  width: 100%;\r\n  padding: 1.5vh 1vh;\r\n  margin-bottom: 4vh;\r\n  border: 1px solid rgba(0, 0, 0, 0.137);\r\n  outline: none;\r\n  background-color: rgb(247, 247, 247);\r\n}\r\n\r\n.give-code-container {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.give-code-container input {\r\n  flex: 1;\r\n  padding: 5px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.give-code-container button {\r\n  padding: 5px 10px;\r\n  background-color: #007bff;\r\n  border: none;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n}\r\n\r\n.summary-total {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 1.25rem;\r\n  font-weight: bold;\r\n  margin-top: 20px;\r\n}\r\n\r\n.checkout-button {\r\n  width: 100%;\r\n  padding: 1vh;\r\n  background-color: #000;\r\n  color: #fff;\r\n  border: none;\r\n  font-size: 0.7rem;\r\n  border-radius: 0;\r\n  cursor: pointer;\r\n}\r\n\r\n.checkout-button:hover {\r\n  background-color: #333;\r\n}\r\n\r\n</style>\r\n"],"mappings":";;;;AAoEA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACF,SAAS,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IACrE,CAAC;IACD;IACAC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACP,SAAS,CAACG,MAAM,CAC1B,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAI,CAACI,MAAM,CAACH,IAAI,CAACI,KAAK,KAAK,CAAC,IAAIJ,IAAI,CAACC,QAAQ,EAC9D,CACF,CAAC;IACH;EACF,CAAC;EACDI,OAAO,EAAE;IACP;IACAC,cAAcA,CAAA,EAAG;MACf,MAAMC,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE;MAC3D,IAAI,CAAChB,SAAQ,GAAIY,IAAI,CAACK,GAAG,CAAEZ,IAAI,KAAM;QACnC,GAAGA,IAAI;QACPI,KAAK,EAAED,MAAM,CAACH,IAAI,CAACI,KAAK,CAAC,CAAE;MAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD;IACAS,iBAAiBA,CAACb,IAAI,EAAE;MACtBA,IAAI,CAACC,QAAQ,EAAE;MACf,IAAI,CAACa,mBAAmB,CAAC,CAAC;IAC5B,CAAC;IACD;IACAC,iBAAiBA,CAACf,IAAI,EAAE;MACtB,IAAIA,IAAI,CAACC,QAAO,GAAI,CAAC,EAAE;QACrBD,IAAI,CAACC,QAAQ,EAAE;QACf,IAAI,CAACa,mBAAmB,CAAC,CAAC;MAC5B;IACF,CAAC;IACD;IACAE,UAAUA,CAACC,MAAM,EAAE;MACjB,IAAI,CAACtB,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACuB,MAAM,CAAElB,IAAI,IAAKA,IAAI,CAACmB,EAAC,KAAMF,MAAM,CAAC;MACpE,IAAI,CAACH,mBAAmB,CAAC,CAAC;IAC5B,CAAC;IACD;IACAA,mBAAmBA,CAAA,EAAG;MACpBJ,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAAC,IAAI,CAAC1B,SAAS,CAAC,CAAC;IAC9D,CAAC;IACD;IACA2B,QAAQA,CAAA,EAAG;MACTC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;EACF,CAAC;EACD;EACAC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAClB,cAAc,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}