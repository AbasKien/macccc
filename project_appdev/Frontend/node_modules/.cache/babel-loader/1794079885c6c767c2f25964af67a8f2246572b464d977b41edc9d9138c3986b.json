{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"product-container\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"product-name\"\n};\nconst _hoisted_4 = {\n  class: \"product-description\"\n};\nconst _hoisted_5 = {\n  class: \"product-price\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"product-stock\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"product-stock-out\"\n};\nconst _hoisted_8 = {\n  key: 2,\n  class: \"quantity-container\"\n};\nconst _hoisted_9 = [\"onUpdate:modelValue\", \"max\"];\nconst _hoisted_10 = [\"onClick\", \"disabled\"];\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  class: \"cart-icon-container\"\n};\nconst _hoisted_13 = {\n  class: \"cart-count\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", {\n    class: \"product-title\"\n  }, \"Product List\", -1 /* HOISTED */)), $data.products.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"product-card\",\n      key: product.id\n    }, [_createElementVNode(\"img\", {\n      src: `http://localhost:5555${product.image_url}`,\n      alt: \"Product Image\",\n      class: \"product-image\"\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"h2\", _hoisted_3, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(product.description), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, \"Price: $\" + _toDisplayString(product.price), 1 /* TEXT */), product.stock > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"In Stock: \" + _toDisplayString(product.stock), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"Out of Stock\")), _createCommentVNode(\" Quantity Input and Add to Cart Button \"), product.stock > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => product.orderQuantity = $event,\n      type: \"number\",\n      min: \"1\",\n      max: product.stock,\n      class: \"quantity-input\",\n      placeholder: \"Quantity\"\n    }, null, 8 /* PROPS */, _hoisted_9), [[_vModelText, product.orderQuantity]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.addToCart(product),\n      class: \"add-to-cart\",\n      disabled: product.orderQuantity <= 0 || product.orderQuantity > product.stock\n    }, \" Add to Cart \", 8 /* PROPS */, _hoisted_10)])) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 3\n    }, [_createCommentVNode(\" Add to Cart Button (for Out of Stock) \"), _cache[1] || (_cache[1] = _createElementVNode(\"button\", {\n      class: \"add-to-cart\",\n      disabled: true\n    }, \" Out of Stock \", -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \"No products available at the moment.\")), _createCommentVNode(\" Cart Icon \"), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToCart && $options.goToCart(...args)),\n    class: \"cart-icon\"\n  }, [_cache[2] || (_cache[2] = _createTextVNode(\" ðŸ›’ \")), _createElementVNode(\"span\", _hoisted_13, _toDisplayString($data.cartItemCount), 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","$data","products","length","_hoisted_1","_Fragment","_renderList","product","id","src","image_url","alt","_hoisted_2","_hoisted_3","_toDisplayString","name","_hoisted_4","description","_hoisted_5","price","stock","_hoisted_6","_hoisted_7","_createCommentVNode","_hoisted_8","$event","orderQuantity","type","min","max","placeholder","_hoisted_9","onClick","$options","addToCart","disabled","_hoisted_10","_hoisted_11","_hoisted_12","_cache","args","goToCart","_createTextVNode","_hoisted_13","cartItemCount"],"sources":["C:\\laragon\\www\\admin_ecommerce\\vue\\src\\views\\product.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1 class=\"product-title\">Product List</h1>\r\n\r\n    <div v-if=\"products.length > 0\" class=\"product-container\">\r\n      <div class=\"product-card\" v-for=\"product in products\" :key=\"product.id\">\r\n        <img :src=\"`http://localhost:5555${product.image_url}`\" alt=\"Product Image\" class=\"product-image\" />\r\n        <h2 class=\"product-name\">{{ product.name }}</h2>\r\n        <p class=\"product-description\">{{ product.description }}</p>\r\n        <p class=\"product-price\">Price: ${{ product.price }}</p>\r\n        <p class=\"product-stock\" v-if=\"product.stock > 0\">In Stock: {{ product.stock }}</p>\r\n        <p class=\"product-stock-out\" v-else>Out of Stock</p>\r\n\r\n        <!-- Quantity Input and Add to Cart Button -->\r\n        <div v-if=\"product.stock > 0\" class=\"quantity-container\">\r\n          <input \r\n            v-model=\"product.orderQuantity\" \r\n            type=\"number\" \r\n            min=\"1\" \r\n            :max=\"product.stock\"\r\n            class=\"quantity-input\"\r\n            placeholder=\"Quantity\"\r\n          />\r\n          <button \r\n            @click=\"addToCart(product)\" \r\n            class=\"add-to-cart\"\r\n            :disabled=\"product.orderQuantity <= 0 || product.orderQuantity > product.stock\">\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Add to Cart Button (for Out of Stock) -->\r\n        <button \r\n          v-else \r\n          class=\"add-to-cart\"\r\n          :disabled=\"true\">\r\n          Out of Stock\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <p v-else>No products available at the moment.</p>\r\n\r\n    <!-- Cart Icon -->\r\n    <div class=\"cart-icon-container\">\r\n      <button @click=\"goToCart\" class=\"cart-icon\">\r\n        ðŸ›’ <span class=\"cart-count\">{{ cartItemCount }}</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [], // Array to hold the products\r\n      cartItemCount: 0, // Initialize cart item count\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProducts(); // Fetch products when the component is created\r\n    this.updateCartItemCount(); // Update cart item count\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5555/products');\r\n        this.products = response.data.products; // Update the products array\r\n        // Initialize orderQuantity for each product\r\n        this.products.forEach(product => {\r\n          this.$set(product, 'orderQuantity', 1); // Default quantity is 1\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    },\r\n    addToCart(product) {\r\n      // Ensure orderQuantity is valid\r\n      if (product.orderQuantity <= 0 || product.orderQuantity > product.stock) {\r\n        return; // Do nothing if quantity is invalid\r\n      }\r\n\r\n      let cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n      const existingProduct = cart.find(item => item.id === product.id);\r\n\r\n      if (existingProduct) {\r\n        existingProduct.quantity += product.orderQuantity;\r\n      } else {\r\n        cart.push({ ...product, quantity: product.orderQuantity });\r\n      }\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n      this.updateCartItemCount(); // Update cart item count after adding product\r\n\r\n      // Optionally, reduce stock in the frontend\r\n      product.stock -= product.orderQuantity;\r\n      if (product.stock < 0) product.stock = 0; // Ensure stock doesn't go below 0\r\n\r\n      // Reset orderQuantity to 1 after adding to cart\r\n      this.$set(product, 'orderQuantity', 1);\r\n    },\r\n    goToCart() {\r\n      this.$router.push('/cart'); // Navigate to the cart page\r\n    },\r\n    updateCartItemCount() {\r\n      const cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n      this.cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-title {\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\n.product-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  padding: 0 15px;\r\n}\r\n\r\n.product-card {\r\n  border: 1px solid #eee;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  text-align: center;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.product-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  height: auto;\r\n  object-fit: contain;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.product-name {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.product-description {\r\n  font-size: 1rem;\r\n  color: #666;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.product-price {\r\n  font-size: 1rem;\r\n  color: #333;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.product-stock,\r\n.product-stock-out {\r\n  font-size: 0.9rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product-stock {\r\n  color: #4caf50;\r\n}\r\n\r\n.product-stock-out {\r\n  color: red;\r\n}\r\n\r\n.quantity-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.quantity-input {\r\n  width: 60px;\r\n  padding: 5px;\r\n  font-size: 1rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n}\r\n\r\n.add-to-cart {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.add-to-cart:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.add-to-cart:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.cart-icon-container {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  z-index: 10;\r\n}\r\n\r\n.cart-icon {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 15px;\r\n  font-size: 1.5rem;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n\r\n.cart-icon:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.cart-count {\r\n  position: absolute;\r\n  top: -5px;\r\n  right: -5px;\r\n  background-color: red;\r\n  color: white;\r\n  font-size: 1rem;\r\n  padding: 5px;\r\n  border-radius: 50%;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}