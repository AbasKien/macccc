{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"product-container\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"product-name\"\n};\nconst _hoisted_4 = {\n  class: \"product-description\"\n};\nconst _hoisted_5 = {\n  class: \"product-price\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Product List\", -1 /* HOISTED */)), $data.products.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"product-card\",\n      key: product.id\n    }, [_createElementVNode(\"img\", {\n      src: product.image_url,\n      alt: \"Product Image\",\n      class: \"product-image\"\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"h2\", _hoisted_3, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(product.description), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, \"Price: $\" + _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.addToCart(product),\n      class: \"add-to-cart\"\n    }, \"Add to Cart\", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"No products available at the moment.\"))]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","$data","products","length","_hoisted_1","_Fragment","_renderList","product","id","src","image_url","alt","_hoisted_2","_hoisted_3","_toDisplayString","name","_hoisted_4","description","_hoisted_5","price","onClick","$event","$options","addToCart","_hoisted_6","_hoisted_7"],"sources":["C:\\laragon\\www\\admin_ecommerce\\vue\\src\\views\\product.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Product List</h1>\r\n  \r\n      <div v-if=\"products.length > 0\" class=\"product-container\">\r\n        <div class=\"product-card\" v-for=\"product in products\" :key=\"product.id\">\r\n          <img :src=\"product.image_url\" alt=\"Product Image\" class=\"product-image\" />\r\n          <h2 class=\"product-name\">{{ product.name }}</h2>\r\n          <p class=\"product-description\">{{ product.description }}</p>\r\n          <p class=\"product-price\">Price: ${{ product.price }}</p>\r\n          <button @click=\"addToCart(product)\" class=\"add-to-cart\">Add to Cart</button>\r\n        </div>\r\n      </div>\r\n  \r\n      <p v-else>No products available at the moment.</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        products: [], // Array to hold the products\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchProducts(); // Fetch products when the component is created\r\n    },\r\n    methods: {\r\n      async fetchProducts() {\r\n        try {\r\n          const response = await this.$http.get('/products'); // Assuming /products fetches all products\r\n          this.products = response.data.products;\r\n        } catch (error) {\r\n          console.error('Error fetching products:', error);\r\n        }\r\n      },\r\n      addToCart(product) {\r\n        // Assuming you have a cart functionality where you add products\r\n        console.log('Adding to cart:', product);\r\n        // Your add to cart logic here, e.g., saving to local storage or sending to a cart API\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .product-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 20px;\r\n  }\r\n  \r\n  .product-card {\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .product-image {\r\n    width: 100%;\r\n    height: auto;\r\n    max-height: 200px;\r\n    object-fit: cover;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .product-name {\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .product-description {\r\n    font-size: 1rem;\r\n    color: #666;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .product-price {\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .add-to-cart {\r\n    background-color: #4caf50;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .add-to-cart:hover {\r\n    background-color: #45a049;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAAAA,GAAA;EAIsCC,KAAK,EAAC;;mBAJ5C;;EAOcA,KAAK,EAAC;AAAc;;EACrBA,KAAK,EAAC;AAAqB;;EAC3BA,KAAK,EAAC;AAAe;mBATlC;;EAAAD,GAAA;AAAA;;uBACIE,mBAAA,CAcM,c,0BAbJC,mBAAA,CAAqB,YAAjB,cAAY,sBAELC,KAAA,CAAAC,QAAQ,CAACC,MAAM,Q,cAA1BJ,mBAAA,CAQM,OARNK,UAQM,I,kBAPJL,mBAAA,CAMMM,SAAA,QAXdC,WAAA,CAKoDL,KAAA,CAAAC,QAAQ,EAAnBK,OAAO;yBAAxCR,mBAAA,CAMM;MANDD,KAAK,EAAC,cAAc;MAA8BD,GAAG,EAAEU,OAAO,CAACC;QAClER,mBAAA,CAA0E;MAApES,GAAG,EAAEF,OAAO,CAACG,SAAS;MAAEC,GAAG,EAAC,eAAe;MAACb,KAAK,EAAC;4BANlEc,UAAA,GAOUZ,mBAAA,CAAgD,MAAhDa,UAAgD,EAAAC,gBAAA,CAApBP,OAAO,CAACQ,IAAI,kBACxCf,mBAAA,CAA4D,KAA5DgB,UAA4D,EAAAF,gBAAA,CAA1BP,OAAO,CAACU,WAAW,kBACrDjB,mBAAA,CAAwD,KAAxDkB,UAAwD,EAA/B,UAAQ,GAAAJ,gBAAA,CAAGP,OAAO,CAACY,KAAK,kBACjDnB,mBAAA,CAA4E;MAAnEoB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAAChB,OAAO;MAAGT,KAAK,EAAC;OAAc,aAAW,iBAV7E0B,UAAA,E;qDAcMzB,mBAAA,CAAkD,KAdxD0B,UAAA,EAcgB,sCAAoC,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}