{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      products: [],\n      // Array to store products\n      cartItemCount: 0,\n      // Tracks the cart item count\n      loading: true // Loading state\n    };\n  },\n  created() {\n    this.fetchProducts();\n    this.updateCartItemCount();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get(\"http://localhost:5555/products\");\n        this.products = response.data.products.map(product => ({\n          ...product,\n          orderQuantity: 1 // Initialize quantity input\n        }));\n\n        // Sync stock with cart items\n        const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n        cart.forEach(item => {\n          const product = this.products.find(p => p.id === item.id);\n          if (product) {\n            product.stock -= item.quantity;\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async addToCart(product) {\n      if (product.orderQuantity <= 0 || product.orderQuantity > product.stock) {\n        return;\n      }\n\n      // Prepare the payload\n      const payload = {\n        productId: product.id,\n        quantity: product.orderQuantity\n      };\n      try {\n        // Send POST request to add product to the cart on the server\n        const response = await axios.post('http://localhost:5555/AddToCart', payload);\n        // Assuming the response contains the updated cart data\n        const updatedCart = response.data.cart;\n\n        // Optionally, update localStorage or Vuex store with the updated cart\n        localStorage.setItem('cart', JSON.stringify(updatedCart));\n\n        // Update the product's stock and reset quantity\n        product.stock -= product.orderQuantity;\n        product.orderQuantity = 1;\n\n        // Update the cart item count in the UI\n        this.updateCartItemCount();\n\n        // Optionally show a confirmation message\n        alert('Product added to the cart!');\n      } catch (error) {\n        console.error('Error adding product to the cart:', error);\n        alert('Something went wrong while adding the product to the cart. Please try again later.');\n      }\n    },\n    // Update cart item count from backend or local storage\n    updateCartItemCount() {\n      const cart = JSON.parse(localStorage.getItem('cart')) || [];\n      this.cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","cartItemCount","loading","created","fetchProducts","updateCartItemCount","methods","response","get","map","product","orderQuantity","cart","JSON","parse","localStorage","getItem","forEach","item","find","p","id","stock","quantity","error","console","addToCart","payload","productId","post","updatedCart","setItem","stringify","alert","reduce","total"],"sources":["C:\\laragon\\www\\project_appdev\\Frontend\\src\\views\\product.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-page\">\r\n    <!-- Top Announcement Bar -->\r\n    <div class=\"announcement-bar\">\r\n      Free shipping, 30-day return or refund guarantee.\r\n    </div>\r\n\r\n    <!-- Header -->\r\n    <header class=\"header\">\r\n      <div class=\"logo\">Male Fashion</div>\r\n      <nav class=\"nav\">\r\n        <router-link\r\n          to=\"/home\"\r\n          class=\"nav-link\"\r\n          :class=\"{ active: $route.path === '/home' }\"\r\n        >\r\n          Home\r\n        </router-link>\r\n        <router-link\r\n          to=\"/product\"\r\n          class=\"nav-link\"\r\n          :class=\"{ active: $route.path === '/product' }\"\r\n        >\r\n          Shop\r\n        </router-link>\r\n        <router-link\r\n          to=\"/orders\"\r\n          class=\"nav-link\"\r\n          :class=\"{ active: $route.path === '/orders' }\"\r\n        >\r\n          Orders\r\n        </router-link>\r\n      </nav>\r\n      <div class=\"user-controls\">\r\n       <!-- Cart Link with Item Count in the top-right -->\r\n       <router-link to=\"/cart\" class=\"cart\" :class=\"{ active: $route.path === '/cart' }\">\r\n  <!-- Cart Icon -->\r\n  <svg xmlns=\"https://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#333\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"cart-logo\">\r\n    <path d=\"M6 6h15l-1.5 9h-13L6 6z\"></path>\r\n    <path d=\"M6 6L4 4\"></path>\r\n    <path d=\"M20 6L22 4\"></path>\r\n    <circle cx=\"10\" cy=\"19\" r=\"2\"></circle>\r\n    <circle cx=\"18\" cy=\"19\" r=\"2\"></circle>\r\n  </svg>\r\n  <!-- Cart Item Count -->\r\n  <span class=\"cart-count\">{{ cartItemCount }}</span>\r\n</router-link>\r\n\r\n\r\n      </div>\r\n    </header>\r\n\r\n    <!-- Products Section -->\r\n    <section class=\"products\">\r\n      <div class=\"content\">\r\n        <h1>Our Products</h1>\r\n        <p class=\"description\">\r\n          Discover our exclusive collection of men's fashion. Style that fits you perfectly.\r\n        </p>\r\n        <div v-if=\"loading\" class=\"loading\">Loading products...</div>\r\n        <div v-else-if=\"products.length > 0\" class=\"product-grid\">\r\n          <div\r\n            class=\"product-card\"\r\n            v-for=\"product in products\"\r\n            :key=\"product.id\"\r\n          >\r\n            <img\r\n              :src=\"`http://localhost:5555${product.image_url}`\"\r\n              :alt=\"product.name\"\r\n              class=\"product-image\"\r\n            />\r\n            <h2 class=\"product-name\">{{ product.name }}</h2>\r\n            <p class=\"product-price\">Price: ${{ product.price }}</p>\r\n            <p v-if=\"product.stock > 0\" class=\"product-stock\">\r\n              In Stock: {{ product.stock }}\r\n            </p>\r\n            <p v-else class=\"product-stock-out\">Out of Stock</p>\r\n\r\n            <div v-if=\"product.stock > 0\" class=\"quantity-container\">\r\n              <input\r\n                v-model.number=\"product.orderQuantity\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                :max=\"product.stock\"\r\n                class=\"quantity-input\"\r\n              />\r\n              <button\r\n                @click=\"addToCart(product)\"\r\n                class=\"add-to-cart\"\r\n                :disabled=\"product.orderQuantity <= 0 || product.orderQuantity > product.stock\"\r\n              >\r\n                Add to Cart\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p v-else>No products available at the moment.</p>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [], // Array to store products\r\n      cartItemCount: 0, // Tracks the cart item count\r\n      loading: true, // Loading state\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProducts();\r\n    this.updateCartItemCount();\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5555/products\");\r\n        this.products = response.data.products.map((product) => ({\r\n          ...product,\r\n          orderQuantity: 1, // Initialize quantity input\r\n        }));\r\n\r\n        // Sync stock with cart items\r\n        const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n        cart.forEach((item) => {\r\n          const product = this.products.find((p) => p.id === item.id);\r\n          if (product) {\r\n            product.stock -= item.quantity;\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async addToCart(product) {\r\n      if (product.orderQuantity <= 0 || product.orderQuantity > product.stock) {\r\n      return;\r\n    }\r\n\r\n    // Prepare the payload\r\n    const payload = {\r\n      productId: product.id,\r\n      quantity: product.orderQuantity,\r\n    };\r\n\r\n    try {\r\n      // Send POST request to add product to the cart on the server\r\n      const response = await axios.post('http://localhost:5555/AddToCart', payload);\r\n      // Assuming the response contains the updated cart data\r\n      const updatedCart = response.data.cart;\r\n\r\n      // Optionally, update localStorage or Vuex store with the updated cart\r\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\r\n\r\n      // Update the product's stock and reset quantity\r\n      product.stock -= product.orderQuantity;\r\n      product.orderQuantity = 1;\r\n\r\n      // Update the cart item count in the UI\r\n      this.updateCartItemCount();\r\n\r\n      // Optionally show a confirmation message\r\n      alert('Product added to the cart!');\r\n    } catch (error) {\r\n      console.error('Error adding product to the cart:', error);\r\n      alert('Something went wrong while adding the product to the cart. Please try again later.');\r\n    }\r\n  },\r\n\r\n  // Update cart item count from backend or local storage\r\n  updateCartItemCount() {\r\n    const cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n    this.cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);\r\n  },\r\n},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Global Styles */\r\nbody {\r\n  margin: 0;\r\n  font-family: \"Arial\", sans-serif;\r\n}\r\n\r\n/* Announcement Bar */\r\n.announcement-bar {\r\n  background-color: #070707;\r\n  color: #e33131;\r\n  text-align: center;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n/* Header */\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background: #fff;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.logo {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #000;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n}\r\n\r\n.nav-link {\r\n  margin: 0 15px;\r\n  text-decoration: none;\r\n  color: #333;\r\n  font-weight: bold;\r\n  position: relative;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.nav-link::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 0;\r\n  height: 2px;\r\n  background-color: rgb(255, 96, 56);\r\n  transition: width 0.3s;\r\n}\r\n\r\n.nav-link:hover::after,\r\n.nav-link.active::after {\r\n  width: 100%;\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #f75151;\r\n}\r\n\r\n/* User Controls */\r\n.user-controls {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.cart {\r\n  position: relative;\r\n  margin-right: 20px;\r\n  text-decoration: none;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.cart-logo {\r\n  width: 24px;\r\n  height: 24px;\r\n  fill: #333;\r\n  transition: fill 0.3s ease;\r\n}\r\n\r\n.cart-logo:hover {\r\n  fill: #f75151;\r\n}\r\n\r\n.cart-count {\r\n  position: absolute;\r\n  top: -5px;\r\n  right: -10px;\r\n  background: #ff6f61;\r\n  color: #fff;\r\n  font-size: 12px;\r\n  padding: 3px 7px;\r\n  border-radius: 50%;\r\n}\r\n\r\n/* Products Section */\r\n.products {\r\n  padding: 50px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\nh1 {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.description {\r\n  margin-bottom: 40px;\r\n  font-size: 18px;\r\n  color: #555;\r\n}\r\n\r\n.product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.product-card {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  height: auto;\r\n  margin-bottom: 15px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.product-name {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.product-price {\r\n  font-size: 16px;\r\n  color: #555;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.add-to-cart {\r\n  background-color: #ebcf35;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.add-to-cart:hover {\r\n  background-color: #63d031;\r\n}\r\n\r\n/* Fade Transition */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n/* Loading Text */\r\n.loading {\r\n  font-size: 18px;\r\n  color: #555;\r\n  text-align: center;\r\n  margin: 50px 0;\r\n}\r\n</style>\r\n"],"mappings":";;;;;AAwGA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,aAAa,EAAE,CAAC;MAAE;MAClBC,OAAO,EAAE,IAAI,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,gCAAgC,CAAC;QAClE,IAAI,CAACR,QAAO,GAAIO,QAAQ,CAACR,IAAI,CAACC,QAAQ,CAACS,GAAG,CAAEC,OAAO,KAAM;UACvD,GAAGA,OAAO;UACVC,aAAa,EAAE,CAAC,CAAE;QACpB,CAAC,CAAC,CAAC;;QAEH;QACA,MAAMC,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE;QAC3DJ,IAAI,CAACK,OAAO,CAAEC,IAAI,IAAK;UACrB,MAAMR,OAAM,GAAI,IAAI,CAACV,QAAQ,CAACmB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAC,KAAMH,IAAI,CAACG,EAAE,CAAC;UAC3D,IAAIX,OAAO,EAAE;YACXA,OAAO,CAACY,KAAI,IAAKJ,IAAI,CAACK,QAAQ;UAChC;QACF,CAAC,CAAC;MACJ,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,UAAU;QACR,IAAI,CAACtB,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACD,MAAMwB,SAASA,CAAChB,OAAO,EAAE;MACvB,IAAIA,OAAO,CAACC,aAAY,IAAK,KAAKD,OAAO,CAACC,aAAY,GAAID,OAAO,CAACY,KAAK,EAAE;QACzE;MACF;;MAEA;MACA,MAAMK,OAAM,GAAI;QACdC,SAAS,EAAElB,OAAO,CAACW,EAAE;QACrBE,QAAQ,EAAEb,OAAO,CAACC;MACpB,CAAC;MAED,IAAI;QACF;QACA,MAAMJ,QAAO,GAAI,MAAMT,KAAK,CAAC+B,IAAI,CAAC,iCAAiC,EAAEF,OAAO,CAAC;QAC7E;QACA,MAAMG,WAAU,GAAIvB,QAAQ,CAACR,IAAI,CAACa,IAAI;;QAEtC;QACAG,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAElB,IAAI,CAACmB,SAAS,CAACF,WAAW,CAAC,CAAC;;QAEzD;QACApB,OAAO,CAACY,KAAI,IAAKZ,OAAO,CAACC,aAAa;QACtCD,OAAO,CAACC,aAAY,GAAI,CAAC;;QAEzB;QACA,IAAI,CAACN,mBAAmB,CAAC,CAAC;;QAE1B;QACA4B,KAAK,CAAC,4BAA4B,CAAC;MACrC,EAAE,OAAOT,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDS,KAAK,CAAC,oFAAoF,CAAC;MAC7F;IACF,CAAC;IAED;IACA5B,mBAAmBA,CAAA,EAAG;MACpB,MAAMO,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE;MAC3D,IAAI,CAACf,aAAY,GAAIW,IAAI,CAACsB,MAAM,CAAC,CAACC,KAAK,EAAEjB,IAAI,KAAKiB,KAAI,GAAIjB,IAAI,CAACK,QAAQ,EAAE,CAAC,CAAC;IAC7E;EACF;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}