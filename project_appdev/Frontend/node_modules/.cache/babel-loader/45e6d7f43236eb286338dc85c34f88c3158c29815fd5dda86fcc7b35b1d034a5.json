{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      // Initialize an empty array for cart items\n      shippingAddress: '',\n      // Store the shipping address\n      contactNumber: '',\n      // Store the contact number\n      form: {\n        name: '',\n        // Capture customer's name\n        address: '',\n        // Capture shipping address\n        payment: '' // Capture payment method\n      }\n    };\n  },\n  computed: {\n    // Calculate the total number of items in the cart\n    totalItems() {\n      return this.cartItems.reduce((sum, item) => sum + item.quantity, 0);\n    },\n    // Calculate the total cost of items in the cart\n    totalCost() {\n      return this.cartItems.reduce((sum, item) => sum + (Number(item.price) || 0) * item.quantity, 0);\n    }\n  },\n  methods: {\n    // Initialize the cart from localStorage when the component is created\n    loadCartFromLocalStorage() {\n      const savedCart = localStorage.getItem('cartItems');\n      if (savedCart) {\n        this.cartItems = JSON.parse(savedCart);\n      }\n    },\n    // Save the cart to localStorage\n    saveCartToLocalStorage() {\n      localStorage.setItem('cartItems', JSON.stringify(this.cartItems));\n    },\n    // Increment the quantity of an item\n    incrementQuantity(item) {\n      item.quantity++;\n      this.saveCartToLocalStorage(); // Update the cart in local storage\n    },\n    // Decrement the quantity of an item\n    decrementQuantity(item) {\n      if (item.quantity > 1) {\n        item.quantity--;\n        this.saveCartToLocalStorage(); // Update the cart in local storage\n      }\n    },\n    // Remove an item from the cart\n    removeItem(itemId) {\n      this.cartItems = this.cartItems.filter(item => item.id !== itemId);\n      this.saveCartToLocalStorage(); // Sync the updated cart with local storage\n    },\n    // Handle changes to the quantity input\n    updateLocalCart() {\n      this.saveCartToLocalStorage(); // Update the cart in local storage whenever quantity changes\n    },\n    methods: {\n      async checkout() {\n        // Add validation for form fields\n        if (!this.form.name || !this.form.address || !this.form.payment) {\n          alert(\"Please fill in all the fields (Name, Address, and Payment).\");\n          return;\n        }\n        try {\n          const response = await axios.post(\"http://localhost:5555/orders\", {\n            name: this.form.name,\n            address: this.form.address,\n            payment: this.form.payment,\n            total_price: (parseFloat(this.totalCost) + 58).toFixed(2) // Add shipping cost\n          });\n          alert(response.data.message); // Success message\n          this.$router.push(\"/thank-you\"); // Redirect to the thank-you page\n        } catch (error) {\n          console.error(\"Failed to checkout:\", error);\n          alert(\"There was an error placing your order. Please try again.\");\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","cartItems","shippingAddress","contactNumber","form","name","address","payment","computed","totalItems","reduce","sum","item","quantity","totalCost","Number","price","methods","loadCartFromLocalStorage","savedCart","localStorage","getItem","JSON","parse","saveCartToLocalStorage","setItem","stringify","incrementQuantity","decrementQuantity","removeItem","itemId","filter","id","updateLocalCart","checkout","alert","response","axios","post","total_price","parseFloat","toFixed","message","$router","push","error","console"],"sources":["C:\\laragon\\www\\project_appdev\\Frontend\\src\\views\\cart.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-page\">\r\n    <div class=\"cart-container\">\r\n      <!-- Shopping Cart Section -->\r\n      <div class=\"cart\">\r\n        <h2 class=\"cart-title\">Shopping Cart</h2>\r\n        <p class=\"cart-items-count\">{{ totalItems }} items</p>\r\n\r\n        <div v-if=\"cartItems.length > 0\" class=\"cart-items-list\">\r\n          <!-- Loop through cart items -->\r\n          <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\r\n            <img :src=\"item.image\" alt=\"Item image\" class=\"cart-item-image\" />\r\n            <div class=\"cart-item-details\">\r\n              <h3 class=\"item-name\">{{ item.name }}</h3>\r\n              <p class=\"item-price\">₱{{ (Number(item.price) || 0).toFixed(2) }}</p>\r\n              <div class=\"quantity-controls\">\r\n                <button @click=\"decrementQuantity(item)\">-</button>\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"item.quantity\"\r\n                  min=\"1\"\r\n                  class=\"quantity-input\"\r\n                  @change=\"updateLocalCart\"\r\n                />\r\n                <button @click=\"incrementQuantity(item)\">+</button>\r\n              </div>\r\n            </div>\r\n            <button @click=\"removeItem(item.id)\" class=\"remove-button\">✕</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else class=\"empty-cart\">\r\n          <p>Your cart is empty. Start shopping now!</p>\r\n        </div>\r\n\r\n        <a href=\"/product\" class=\"back-to-shop\">← Back to shop</a>\r\n      </div>\r\n\r\n      <!-- Summary Section -->\r\n      <div class=\"summary\">\r\n        <h2 class=\"summary-title\">Summary</h2>\r\n        <div class=\"summary-item\">\r\n          <span>ITEMS {{ totalItems }}</span>\r\n          <span>₱{{ totalCost.toFixed(2) }}</span>\r\n        </div>\r\n        \r\n        <!-- Shipping Address Section -->\r\n        <div class=\"summary-item\">\r\n          <label for=\"address\">Shipping Address</label>\r\n          <textarea\r\n            id=\"address\"\r\n            v-model=\"shippingAddress\"\r\n            placeholder=\"Enter your shipping address\"\r\n            class=\"address-input\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <!-- Contact Number Section -->\r\n        <div class=\"summary-item\">\r\n          <label for=\"contact\">Contact Number</label>\r\n          <input\r\n            type=\"tel\"\r\n            id=\"contact\"\r\n            v-model=\"contactNumber\"\r\n            placeholder=\"Enter your contact number\"\r\n            class=\"contact-input\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Shipping Option Section -->\r\n        <div class=\"summary-item\">\r\n          <label for=\"shipping\">SHIPPING</label>\r\n          <select id=\"shipping\" class=\"shipping-select\">\r\n            <option value=\"58\">Standard Delivery - ₱58.00</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"summary-item\">\r\n          <label for=\"give-code\">Voucher</label> <br />\r\n          <div class=\"give-code-container\">\r\n            <input type=\"text\" id=\"give-code\" placeholder=\"Enter your code\" />\r\n            <button>→</button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"summary-total\">\r\n          <span>TOTAL PRICE</span>\r\n          <span>₱{{ (totalCost + 58).toFixed(2) }}</span>\r\n        </div>\r\n        <button @click=\"checkout\" class=\"checkout-button\">CHECKOUT</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n  return {\r\n    cartItems: [], // Initialize an empty array for cart items\r\n    shippingAddress: '', // Store the shipping address\r\n    contactNumber: '', // Store the contact number\r\n    form: {\r\n      name: '',        // Capture customer's name\r\n      address: '',     // Capture shipping address\r\n      payment: '',     // Capture payment method\r\n    },\r\n  };\r\n},\r\n\r\n  computed: {\r\n    // Calculate the total number of items in the cart\r\n    totalItems() {\r\n      return this.cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n    },\r\n    // Calculate the total cost of items in the cart\r\n    totalCost() {\r\n      return this.cartItems.reduce(\r\n        (sum, item) => sum + (Number(item.price) || 0) * item.quantity,\r\n        0\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    // Initialize the cart from localStorage when the component is created\r\n    loadCartFromLocalStorage() {\r\n      const savedCart = localStorage.getItem('cartItems');\r\n      if (savedCart) {\r\n        this.cartItems = JSON.parse(savedCart);\r\n      }\r\n    },\r\n\r\n    // Save the cart to localStorage\r\n    saveCartToLocalStorage() {\r\n      localStorage.setItem('cartItems', JSON.stringify(this.cartItems));\r\n    },\r\n\r\n    // Increment the quantity of an item\r\n    incrementQuantity(item) {\r\n      item.quantity++;\r\n      this.saveCartToLocalStorage(); // Update the cart in local storage\r\n    },\r\n\r\n    // Decrement the quantity of an item\r\n    decrementQuantity(item) {\r\n      if (item.quantity > 1) {\r\n        item.quantity--;\r\n        this.saveCartToLocalStorage(); // Update the cart in local storage\r\n      }\r\n    },\r\n\r\n    // Remove an item from the cart\r\n    removeItem(itemId) {\r\n      this.cartItems = this.cartItems.filter((item) => item.id !== itemId);\r\n      this.saveCartToLocalStorage(); // Sync the updated cart with local storage\r\n    },\r\n\r\n    // Handle changes to the quantity input\r\n    updateLocalCart() {\r\n      this.saveCartToLocalStorage(); // Update the cart in local storage whenever quantity changes\r\n    },\r\n\r\n    methods: {\r\n  async checkout() {\r\n    // Add validation for form fields\r\n    if (!this.form.name || !this.form.address || !this.form.payment) {\r\n      alert(\"Please fill in all the fields (Name, Address, and Payment).\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5555/orders\", {\r\n        name: this.form.name,\r\n        address: this.form.address,\r\n        payment: this.form.payment,\r\n        total_price: (parseFloat(this.totalCost) + 58).toFixed(2), // Add shipping cost\r\n      });\r\n\r\n      alert(response.data.message); // Success message\r\n      this.$router.push(\"/thank-you\"); // Redirect to the thank-you page\r\n    } catch (error) {\r\n      console.error(\"Failed to checkout:\", error);\r\n      alert(\"There was an error placing your order. Please try again.\");\r\n    }\r\n  },\r\n},\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cart-page {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 30px;\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.cart-container {\r\n  display: flex;\r\n  width: 90%;\r\n  max-width: 1200px;\r\n  gap: 30px;\r\n}\r\n\r\n.cart {\r\n  flex: 2;\r\n  background-color: #fff;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.cart-title {\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.cart-items-count {\r\n  font-size: 1rem;\r\n  color: #666;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.cart-items-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.cart-item-image {\r\n  width: 60px;\r\n  height: 60px;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-details {\r\n  flex: 1;\r\n  margin-left: 15px;\r\n}\r\n\r\n.item-name {\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.item-price {\r\n  color: #888;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.quantity-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.remove-button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: #888;\r\n  cursor: pointer;\r\n}\r\n\r\n.remove-button:hover {\r\n  color: #f00;\r\n}\r\n\r\n.back-to-shop {\r\n  display: inline-block;\r\n  margin-top: 30px;\r\n  color: #141516;\r\n  text-decoration: none;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.back-to-shop:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.summary {\r\n  flex: 1;\r\n  background-color: #f7f7f7;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  text-align: left;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.summary-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.summary-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  font-size: 1rem;\r\n  color: #333;\r\n}\r\n\r\n.address-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  height: 80px;\r\n}\r\n\r\n.contact-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.shipping-select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 10px;\r\n  border: 1px solid #ddd;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n}\r\n\r\n.give-code-container {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.give-code-container input {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.give-code-container button {\r\n  background-color: #000;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 0 20px;\r\n  font-size: 1rem;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.give-code-container button:hover {\r\n  background-color: #333;\r\n}\r\n\r\n.summary-total {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin-top: 30px;\r\n}\r\n\r\n.checkout-button {\r\n  width: 100%;\r\n  padding: 15px;\r\n  margin-top: 20px;\r\n  background-color: #000;\r\n  color: #fff;\r\n  font-size: 1.1rem;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.checkout-button:hover {\r\n  background-color: #333;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}