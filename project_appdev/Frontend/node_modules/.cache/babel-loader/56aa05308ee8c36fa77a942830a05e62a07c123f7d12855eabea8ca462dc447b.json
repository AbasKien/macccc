{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport axios from 'axios'; // Import Axios for API requests\n\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      // Initialize an empty array for cart items\n      shippingAddress: '',\n      // Store the shipping address\n      contactNumber: '' // Store the contact number\n    };\n  },\n  computed: {\n    // Calculate the total number of items in the cart\n    totalItems() {\n      return this.cartItems.reduce((sum, item) => sum + item.quantity, 0);\n    },\n    // Calculate the total cost of items in the cart\n    totalCost() {\n      return this.cartItems.reduce((sum, item) => sum + (Number(item.price) || 0) * item.quantity, 0);\n    }\n  },\n  methods: {\n    // Initialize the cart from localStorage when the component is created\n    loadCartFromLocalStorage() {\n      const savedCart = localStorage.getItem('cartItems');\n      if (savedCart) {\n        this.cartItems = JSON.parse(savedCart);\n      }\n    },\n    // Save the cart to localStorage\n    saveCartToLocalStorage() {\n      localStorage.setItem('cartItems', JSON.stringify(this.cartItems));\n    },\n    // Increment the quantity of an item\n    incrementQuantity(item) {\n      item.quantity++;\n      this.saveCartToLocalStorage(); // Update the cart in local storage\n    },\n    // Decrement the quantity of an item\n    decrementQuantity(item) {\n      if (item.quantity > 1) {\n        item.quantity--;\n        this.saveCartToLocalStorage(); // Update the cart in local storage\n      }\n    },\n    // Remove an item from the cart\n    removeItem(itemId) {\n      this.cartItems = this.cartItems.filter(item => item.id !== itemId);\n      this.saveCartToLocalStorage(); // Sync the updated cart with local storage\n    },\n    // Handle changes to the quantity input\n    updateLocalCart() {\n      this.saveCartToLocalStorage(); // Update the cart in local storage whenever quantity changes\n    },\n    // Handle the checkout process\n    async checkout() {\n      // Add validation before checkout\n      if (!this.shippingAddress || !this.contactNumber) {\n        alert('Please provide both a shipping address and contact number.');\n        return;\n      }\n\n      // Prepare order data\n      const orderData = {\n        contact_number: this.contactNumber,\n        address: this.shippingAddress,\n        payment_method: \"Credit Card\",\n        // Example static payment method, modify as needed\n        total_price: (this.totalCost + 58).toFixed(2),\n        // Add shipping cost to the total\n        order_status: \"Pending\",\n        // Example order status, you may adjust this\n        created_at: new Date().toISOString() // Timestamp of the order\n      };\n      try {\n        // Send a POST request to create an order\n        const response = await axios.post('http://localhost:5555/orders', orderData);\n\n        // If the request is successful, handle the response\n        alert(response.data.message); // Display a success message\n        this.$router.push('/thank-you'); // Redirect to the thank-you page\n      } catch (error) {\n        console.error(\"Failed to checkout:\", error);\n        alert(\"There was an error placing your order. Please try again.\");\n      }\n    }\n  },\n  // Load the cart items when the component is created\n  created() {\n    this.loadCartFromLocalStorage();\n  }\n};","map":{"version":3,"names":["axios","data","cartItems","shippingAddress","contactNumber","computed","totalItems","reduce","sum","item","quantity","totalCost","Number","price","methods","loadCartFromLocalStorage","savedCart","localStorage","getItem","JSON","parse","saveCartToLocalStorage","setItem","stringify","incrementQuantity","decrementQuantity","removeItem","itemId","filter","id","updateLocalCart","checkout","alert","orderData","contact_number","address","payment_method","total_price","toFixed","order_status","created_at","Date","toISOString","response","post","message","$router","push","error","console","created"],"sources":["C:\\laragon\\www\\project_appdev\\Frontend\\src\\views\\cart.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-page\">\r\n    <div class=\"cart-container\">\r\n      <!-- Shopping Cart Section -->\r\n      <div class=\"cart\">\r\n        <h2 class=\"cart-title\">Shopping Cart</h2>\r\n        <p class=\"cart-items-count\">{{ totalItems }} items</p>\r\n\r\n        <div v-if=\"cartItems.length > 0\" class=\"cart-items-list\">\r\n          <!-- Loop through cart items -->\r\n          <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\r\n            <img :src=\"item.image\" alt=\"Item image\" class=\"cart-item-image\" />\r\n            <div class=\"cart-item-details\">\r\n              <h3 class=\"item-name\">{{ item.name }}</h3>\r\n              <p class=\"item-price\">₱{{ (Number(item.price) || 0).toFixed(2) }}</p>\r\n              <div class=\"quantity-controls\">\r\n                <button @click=\"decrementQuantity(item)\">-</button>\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"item.quantity\"\r\n                  min=\"1\"\r\n                  class=\"quantity-input\"\r\n                  @change=\"updateLocalCart\"\r\n                />\r\n                <button @click=\"incrementQuantity(item)\">+</button>\r\n              </div>\r\n            </div>\r\n            <button @click=\"removeItem(item.id)\" class=\"remove-button\">✕</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else class=\"empty-cart\">\r\n          <p>Your cart is empty. Start shopping now!</p>\r\n        </div>\r\n\r\n        <a href=\"/product\" class=\"back-to-shop\">← Back to shop</a>\r\n      </div>\r\n\r\n      <!-- Summary Section -->\r\n      <div class=\"summary\">\r\n        <h2 class=\"summary-title\">Summary</h2>\r\n        <div class=\"summary-item\">\r\n          <span>ITEMS {{ totalItems }}</span>\r\n          <span>₱{{ totalCost.toFixed(2) }}</span>\r\n        </div>\r\n        \r\n        <!-- Shipping Address Section -->\r\n        <div class=\"summary-item\">\r\n          <label for=\"address\">Shipping Address</label>\r\n          <textarea\r\n            id=\"address\"\r\n            v-model=\"shippingAddress\"\r\n            placeholder=\"Enter your shipping address\"\r\n            class=\"address-input\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <!-- Contact Number Section -->\r\n        <div class=\"summary-item\">\r\n          <label for=\"contact\">Contact Number</label>\r\n          <input\r\n            type=\"tel\"\r\n            id=\"contact\"\r\n            v-model=\"contactNumber\"\r\n            placeholder=\"Enter your contact number\"\r\n            class=\"contact-input\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Shipping Option Section -->\r\n        <div class=\"summary-item\">\r\n          <label for=\"shipping\">SHIPPING</label>\r\n          <select id=\"shipping\" class=\"shipping-select\">\r\n            <option value=\"58\">Standard Delivery - ₱58.00</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"summary-item\">\r\n          <label for=\"give-code\">Voucher</label> <br />\r\n          <div class=\"give-code-container\">\r\n            <input type=\"text\" id=\"give-code\" placeholder=\"Enter your code\" />\r\n            <button>→</button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"summary-total\">\r\n          <span>TOTAL PRICE</span>\r\n          <span>₱{{ (totalCost + 58).toFixed(2) }}</span>\r\n        </div>\r\n        <button @click=\"checkout\" class=\"checkout-button\">CHECKOUT</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; // Import Axios for API requests\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartItems: [], // Initialize an empty array for cart items\r\n      shippingAddress: '', // Store the shipping address\r\n      contactNumber: '', // Store the contact number\r\n    };\r\n  },\r\n  computed: {\r\n    // Calculate the total number of items in the cart\r\n    totalItems() {\r\n      return this.cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n    },\r\n    // Calculate the total cost of items in the cart\r\n    totalCost() {\r\n      return this.cartItems.reduce(\r\n        (sum, item) => sum + (Number(item.price) || 0) * item.quantity,\r\n        0\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    // Initialize the cart from localStorage when the component is created\r\n    loadCartFromLocalStorage() {\r\n      const savedCart = localStorage.getItem('cartItems');\r\n      if (savedCart) {\r\n        this.cartItems = JSON.parse(savedCart);\r\n      }\r\n    },\r\n\r\n    // Save the cart to localStorage\r\n    saveCartToLocalStorage() {\r\n      localStorage.setItem('cartItems', JSON.stringify(this.cartItems));\r\n    },\r\n\r\n    // Increment the quantity of an item\r\n    incrementQuantity(item) {\r\n      item.quantity++;\r\n      this.saveCartToLocalStorage(); // Update the cart in local storage\r\n    },\r\n\r\n    // Decrement the quantity of an item\r\n    decrementQuantity(item) {\r\n      if (item.quantity > 1) {\r\n        item.quantity--;\r\n        this.saveCartToLocalStorage(); // Update the cart in local storage\r\n      }\r\n    },\r\n\r\n    // Remove an item from the cart\r\n    removeItem(itemId) {\r\n      this.cartItems = this.cartItems.filter((item) => item.id !== itemId);\r\n      this.saveCartToLocalStorage(); // Sync the updated cart with local storage\r\n    },\r\n\r\n    // Handle changes to the quantity input\r\n    updateLocalCart() {\r\n      this.saveCartToLocalStorage(); // Update the cart in local storage whenever quantity changes\r\n    },\r\n\r\n    // Handle the checkout process\r\n    async checkout() {\r\n      // Add validation before checkout\r\n      if (!this.shippingAddress || !this.contactNumber) {\r\n        alert('Please provide both a shipping address and contact number.');\r\n        return;\r\n      }\r\n\r\n      // Prepare order data\r\n      const orderData = {\r\n        contact_number: this.contactNumber,\r\n        address: this.shippingAddress,\r\n        payment_method: \"Credit Card\",  // Example static payment method, modify as needed\r\n        total_price: (this.totalCost + 58).toFixed(2),  // Add shipping cost to the total\r\n        order_status: \"Pending\",  // Example order status, you may adjust this\r\n        created_at: new Date().toISOString(),  // Timestamp of the order\r\n      };\r\n\r\n      try {\r\n        // Send a POST request to create an order\r\n        const response = await axios.post('http://localhost:5555/orders', orderData);\r\n\r\n        // If the request is successful, handle the response\r\n        alert(response.data.message);  // Display a success message\r\n        this.$router.push('/thank-you');  // Redirect to the thank-you page\r\n\r\n      } catch (error) {\r\n        console.error(\"Failed to checkout:\", error);\r\n        alert(\"There was an error placing your order. Please try again.\");\r\n      }\r\n    },\r\n  },\r\n\r\n  // Load the cart items when the component is created\r\n  created() {\r\n    this.loadCartFromLocalStorage();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cart-page {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 30px;\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.cart-container {\r\n  display: flex;\r\n  width: 90%;\r\n  max-width: 1200px;\r\n  gap: 30px;\r\n}\r\n\r\n.cart {\r\n  flex: 2;\r\n  background-color: #fff;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.cart-title {\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.cart-items-count {\r\n  font-size: 1rem;\r\n  color: #666;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.cart-items-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.cart-item-image {\r\n  width: 60px;\r\n  height: 60px;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-details {\r\n  flex: 1;\r\n  margin-left: 15px;\r\n}\r\n\r\n.item-name {\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.item-price {\r\n  color: #888;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.quantity-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.remove-button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: #888;\r\n  cursor: pointer;\r\n}\r\n\r\n.remove-button:hover {\r\n  color: #f00;\r\n}\r\n\r\n.back-to-shop {\r\n  display: inline-block;\r\n  margin-top: 30px;\r\n  color: #141516;\r\n  text-decoration: none;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.back-to-shop:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.summary {\r\n  flex: 1;\r\n  background-color: #f7f7f7;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  text-align: left;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.summary-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.summary-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  font-size: 1rem;\r\n  color: #333;\r\n}\r\n\r\n.address-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  height: 80px;\r\n}\r\n\r\n.contact-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.shipping-select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 10px;\r\n  border: 1px solid #ddd;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n}\r\n\r\n.give-code-container {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.give-code-container input {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.give-code-container button {\r\n  background-color: #000;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 0 20px;\r\n  font-size: 1rem;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.give-code-container button:hover {\r\n  background-color: #333;\r\n}\r\n\r\n.summary-total {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin-top: 30px;\r\n}\r\n\r\n.checkout-button {\r\n  width: 100%;\r\n  padding: 15px;\r\n  margin-top: 20px;\r\n  background-color: #000;\r\n  color: #fff;\r\n  font-size: 1.1rem;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.checkout-button:hover {\r\n  background-color: #333;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}