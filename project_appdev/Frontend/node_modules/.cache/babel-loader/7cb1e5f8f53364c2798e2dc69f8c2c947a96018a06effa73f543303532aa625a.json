{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      // Cart items array\n      shippingCost: 5,\n      // Default shipping cost\n      placeholderImage: \"https://via.placeholder.com/80\" // Placeholder image URL\n    };\n  },\n  computed: {\n    // Calculate the total number of items in the cart\n    totalItems() {\n      return this.cartItems.reduce((sum, item) => sum + item.quantity, 0);\n    },\n    // Calculate the total cost of items in the cart\n    totalCost() {\n      return this.cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    }\n  },\n  methods: {\n    // Fetch cart items from local storage\n    fetchCartItems() {\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n      this.cartItems = cart.map(item => ({\n        ...item,\n        quantity: item.quantity || 1 // Ensure quantity is valid\n      }));\n    },\n    // Increment the quantity of an item\n    incrementQuantity(item) {\n      item.quantity++;\n      this.updateCartInStorage();\n    },\n    // Decrement the quantity of an item (minimum of 1)\n    decrementQuantity(item) {\n      if (item.quantity > 1) {\n        item.quantity--;\n        this.updateCartInStorage();\n      }\n    },\n    // Remove an item from the cart\n    removeItem(itemId) {\n      this.cartItems = this.cartItems.filter(item => item.id !== itemId);\n      this.updateCartInStorage();\n    },\n    // Update the cart data in local storage\n    updateCartInStorage() {\n      localStorage.setItem(\"cart\", JSON.stringify(this.cartItems));\n    },\n    // Handle the checkout process\n    checkout() {\n      if (this.cartItems.length === 0) {\n        alert(\"Your cart is empty. Add some items before checking out.\");\n        return;\n      }\n      alert(\"Proceeding to checkout!\"); // Implement actual checkout logic here\n    }\n  },\n  created() {\n    this.fetchCartItems(); // Fetch items when the component is created\n  }\n};","map":{"version":3,"names":["data","cartItems","shippingCost","placeholderImage","computed","totalItems","reduce","sum","item","quantity","totalCost","price","methods","fetchCartItems","cart","JSON","parse","localStorage","getItem","map","incrementQuantity","updateCartInStorage","decrementQuantity","removeItem","itemId","filter","id","setItem","stringify","checkout","length","alert","created"],"sources":["C:\\laragon\\www\\project_appdev\\Frontend\\src\\views\\cart.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-page\">\r\n    <div class=\"cart-container\">\r\n      <!-- Shopping Cart Section -->\r\n      <div class=\"cart\">\r\n        <h2 class=\"cart-title\">Shopping Cart</h2>\r\n        <p class=\"cart-items-count\">{{ totalItems }} items</p>\r\n\r\n        <div v-if=\"cartItems.length > 0\" class=\"cart-items-list\">\r\n          <!-- Loop through cart items -->\r\n          <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\r\n            <img :src=\"item.image || placeholderImage\" alt=\"Item image\" class=\"cart-item-image\" />\r\n            <div class=\"cart-item-details\">\r\n              <h3 class=\"item-name\">{{ item.name }}</h3>\r\n              <p class=\"item-price\">€{{ item.price.toFixed(2) }}</p>\r\n              <div class=\"quantity-controls\">\r\n                <button @click=\"decrementQuantity(item)\">-</button>\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"item.quantity\"\r\n                  min=\"1\"\r\n                  class=\"quantity-input\"\r\n                  @change=\"updateCartInStorage\"\r\n                />\r\n                <button @click=\"incrementQuantity(item)\">+</button>\r\n              </div>\r\n            </div>\r\n            <button @click=\"removeItem(item.id)\" class=\"remove-button\">✕</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else class=\"empty-cart\">\r\n          <p>Your cart is empty. Start shopping now!</p>\r\n        </div>\r\n\r\n        <a href=\"/product\" class=\"back-to-shop\">← Back to shop</a>\r\n      </div>\r\n\r\n      <!-- Summary Section -->\r\n      <div class=\"summary\">\r\n        <h2 class=\"summary-title\">Summary</h2>\r\n        <div class=\"summary-item\">\r\n          <span>ITEMS {{ totalItems }}</span>\r\n          <span>€{{ totalCost.toFixed(2) }}</span>\r\n        </div>\r\n        <div class=\"summary-item\">\r\n          <label for=\"shipping\">SHIPPING</label>\r\n          <select id=\"shipping\" v-model=\"shippingCost\" class=\"shipping-select\">\r\n            <option value=\"5\">Standard Delivery - €5.00</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"summary-total\">\r\n          <span>TOTAL PRICE</span>\r\n          <span>€{{ (totalCost + parseFloat(shippingCost)).toFixed(2) }}</span>\r\n        </div>\r\n        <button @click=\"checkout\" class=\"checkout-button\">CHECKOUT</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartItems: [], // Cart items array\r\n      shippingCost: 5, // Default shipping cost\r\n      placeholderImage: \"https://via.placeholder.com/80\", // Placeholder image URL\r\n    };\r\n  },\r\n  computed: {\r\n    // Calculate the total number of items in the cart\r\n    totalItems() {\r\n      return this.cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n    },\r\n    // Calculate the total cost of items in the cart\r\n    totalCost() {\r\n      return this.cartItems.reduce(\r\n        (sum, item) => sum + item.price * item.quantity,\r\n        0\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    // Fetch cart items from local storage\r\n    fetchCartItems() {\r\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n      this.cartItems = cart.map((item) => ({\r\n        ...item,\r\n        quantity: item.quantity || 1, // Ensure quantity is valid\r\n      }));\r\n    },\r\n    // Increment the quantity of an item\r\n    incrementQuantity(item) {\r\n      item.quantity++;\r\n      this.updateCartInStorage();\r\n    },\r\n    // Decrement the quantity of an item (minimum of 1)\r\n    decrementQuantity(item) {\r\n      if (item.quantity > 1) {\r\n        item.quantity--;\r\n        this.updateCartInStorage();\r\n      }\r\n    },\r\n    // Remove an item from the cart\r\n    removeItem(itemId) {\r\n      this.cartItems = this.cartItems.filter((item) => item.id !== itemId);\r\n      this.updateCartInStorage();\r\n    },\r\n    // Update the cart data in local storage\r\n    updateCartInStorage() {\r\n      localStorage.setItem(\"cart\", JSON.stringify(this.cartItems));\r\n    },\r\n    // Handle the checkout process\r\n    checkout() {\r\n      if (this.cartItems.length === 0) {\r\n        alert(\"Your cart is empty. Add some items before checking out.\");\r\n        return;\r\n      }\r\n      alert(\"Proceeding to checkout!\"); // Implement actual checkout logic here\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchCartItems(); // Fetch items when the component is created\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* General Styling */\r\n.cart-page {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.cart-container {\r\n  display: flex;\r\n  width: 90%;\r\n  max-width: 1200px;\r\n  gap: 20px;\r\n}\r\n\r\n/* Cart Section */\r\n.cart {\r\n  flex: 2;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n}\r\n\r\n.cart-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.cart-items-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.cart-item-image {\r\n  width: 80px;\r\n  height: 80px;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-details {\r\n  flex: 1;\r\n  margin-left: 20px;\r\n}\r\n\r\n.item-name {\r\n  font-size: 1rem;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.item-price {\r\n  color: #888;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.quantity-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.remove-button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: #888;\r\n  cursor: pointer;\r\n}\r\n\r\n.remove-button:hover {\r\n  color: #f00;\r\n}\r\n\r\n/* Summary Section */\r\n.summary {\r\n  flex: 1;\r\n  background-color: #f7f7f7;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n}\r\n\r\n.summary-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.summary-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.shipping-select {\r\n  width: 100%;\r\n  padding: 5px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.summary-total {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 1.25rem;\r\n  font-weight: bold;\r\n  margin-top: 20px;\r\n}\r\n\r\n.checkout-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #000;\r\n  color: #fff;\r\n  border: none;\r\n  font-size: 1rem;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.checkout-button:hover {\r\n  background-color: #333;\r\n}\r\n</style>\r\n"],"mappings":";;;;AA8DA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MAAE;MACfC,YAAY,EAAE,CAAC;MAAE;MACjBC,gBAAgB,EAAE,gCAAgC,CAAE;IACtD,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IACrE,CAAC;IACD;IACAC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACT,SAAS,CAACK,MAAM,CAC1B,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACG,KAAI,GAAIH,IAAI,CAACC,QAAQ,EAC/C,CACF,CAAC;IACH;EACF,CAAC;EACDG,OAAO,EAAE;IACP;IACAC,cAAcA,CAAA,EAAG;MACf,MAAMC,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE;MAC3D,IAAI,CAACjB,SAAQ,GAAIa,IAAI,CAACK,GAAG,CAAEX,IAAI,KAAM;QACnC,GAAGA,IAAI;QACPC,QAAQ,EAAED,IAAI,CAACC,QAAO,IAAK,CAAC,CAAE;MAChC,CAAC,CAAC,CAAC;IACL,CAAC;IACD;IACAW,iBAAiBA,CAACZ,IAAI,EAAE;MACtBA,IAAI,CAACC,QAAQ,EAAE;MACf,IAAI,CAACY,mBAAmB,CAAC,CAAC;IAC5B,CAAC;IACD;IACAC,iBAAiBA,CAACd,IAAI,EAAE;MACtB,IAAIA,IAAI,CAACC,QAAO,GAAI,CAAC,EAAE;QACrBD,IAAI,CAACC,QAAQ,EAAE;QACf,IAAI,CAACY,mBAAmB,CAAC,CAAC;MAC5B;IACF,CAAC;IACD;IACAE,UAAUA,CAACC,MAAM,EAAE;MACjB,IAAI,CAACvB,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACwB,MAAM,CAAEjB,IAAI,IAAKA,IAAI,CAACkB,EAAC,KAAMF,MAAM,CAAC;MACpE,IAAI,CAACH,mBAAmB,CAAC,CAAC;IAC5B,CAAC;IACD;IACAA,mBAAmBA,CAAA,EAAG;MACpBJ,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAAC,IAAI,CAAC3B,SAAS,CAAC,CAAC;IAC9D,CAAC;IACD;IACA4B,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAC5B,SAAS,CAAC6B,MAAK,KAAM,CAAC,EAAE;QAC/BC,KAAK,CAAC,yDAAyD,CAAC;QAChE;MACF;MACAA,KAAK,CAAC,yBAAyB,CAAC,EAAE;IACpC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACnB,cAAc,CAAC,CAAC,EAAE;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}