{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      products: [],\n      // Array to hold the products\n      cartItemCount: 0 // Initialize cart item count\n    };\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n    this.updateCartItemCount(); // Update cart item count\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get('http://localhost:5555/products');\n        this.products = response.data.products; // Update the products array\n\n        // Sync products stock with items already in cart\n        const cart = JSON.parse(localStorage.getItem('cart')) || [];\n        cart.forEach(item => {\n          const product = this.products.find(p => p.id === item.id);\n          if (product) {\n            product.stock -= item.quantity; // Reduce stock based on cart items\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    addToCart(product) {\n      // Ensure orderQuantity is valid\n      if (product.orderQuantity <= 0 || product.orderQuantity > product.stock) {\n        return; // Do nothing if quantity is invalid\n      }\n\n      // Get the current cart from localStorage\n      let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n      // Check if the product is already in the cart\n      const existingProduct = cart.find(item => item.id === product.id);\n\n      // If product exists in cart, increase its quantity\n      if (existingProduct) {\n        existingProduct.quantity += product.orderQuantity;\n      } else {\n        // If product doesn't exist in the cart, add it\n        cart.push({\n          ...product,\n          quantity: product.orderQuantity\n        });\n      }\n\n      // Save the cart in localStorage\n      localStorage.setItem('cart', JSON.stringify(cart));\n\n      // Update the cart item count after adding product\n      this.updateCartItemCount();\n\n      // Optionally, reduce stock in the frontend (do not save this in localStorage or the database yet)\n      product.stock -= product.orderQuantity;\n\n      // Ensure stock doesn't go below 0\n      if (product.stock < 0) {\n        product.stock = 0;\n      }\n\n      // Reset orderQuantity to 1 after adding to cart\n      product.orderQuantity = 1; // Direct assignment without using this.$set\n\n      // Save updated products in localStorage (optional, for reloading the page)\n      const updatedProducts = this.products.map(p => {\n        if (p.id === product.id) {\n          return {\n            ...p,\n            stock: product.stock\n          }; // Update stock for the added product\n        }\n        return p;\n      });\n      localStorage.setItem('products', JSON.stringify(updatedProducts));\n    },\n    goToCart() {\n      this.$router.push('/cart'); // Navigate to the cart page\n    },\n    updateCartItemCount() {\n      const cart = JSON.parse(localStorage.getItem('cart')) || [];\n      this.cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","cartItemCount","created","fetchProducts","updateCartItemCount","methods","response","get","cart","JSON","parse","localStorage","getItem","forEach","item","product","find","p","id","stock","quantity","error","console","addToCart","orderQuantity","existingProduct","push","setItem","stringify","updatedProducts","map","goToCart","$router","reduce","total"],"sources":["C:\\laragon\\www\\project_appdev\\Frontend\\src\\views\\product.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-page\">\r\n    <!-- Top Announcement Bar -->\r\n    <div class=\"announcement-bar\">\r\n      Free shipping, 30-day return or refund guarantee.\r\n    </div>\r\n\r\n    <!-- Header -->\r\n    <header class=\"header\">\r\n      <div class=\"logo\">Male fashion.</div>\r\n      <nav class=\"nav\">\r\n        <router-link\r\n          to=\"/home\"\r\n          class=\"nav-link\"\r\n          :class=\"{ active: $route.path === '/home' }\"\r\n        >\r\n          Home\r\n        </router-link>\r\n        <router-link\r\n          to=\"/product\"\r\n          class=\"nav-link\"\r\n          :class=\"{ active: $route.path === '/product' }\"\r\n        >\r\n          Shop\r\n        </router-link>\r\n        <router-link\r\n          to=\"/orders\"\r\n          class=\"nav-link\"\r\n          :class=\"{ active: $route.path === '/orders' }\"\r\n        >\r\n          Orders\r\n        </router-link>\r\n      </nav>\r\n      <div class=\"user-controls\">\r\n        <div class=\"cart\">\r\n          <i class=\"fa fa-shopping-cart\"></i>\r\n          <span class=\"cart-count\">0</span>\r\n        </div>\r\n        <div class=\"user-menu\">\r\n          <img\r\n            src=\"https://media.istockphoto.com/vectors/user-member-vector-icon-for-ui-user-interface-or-profile-face-avatar-vector-id1130884625?k=6&m=1130884625&s=170667a&w=0&h=b4ICEL-2imqnsT-m2tYGxZdxlgD1yKxmoDA-PmPc2-A=\"\r\n            alt=\"User Avatar\"\r\n            class=\"user-avatar\"\r\n          />\r\n          <div class=\"dropdown\">\r\n            <a href=\"#\">Control</a>\r\n            <a href=\"#\">Profile</a>\r\n            <a href=\"/\">Log-Out</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n\r\n    <!-- Products Section -->\r\n    <transition name=\"fade\">\r\n      <section class=\"products\">\r\n        <div class=\"content\">\r\n          <h1>Our Products</h1>\r\n          <p class=\"description\">\r\n            Discover our exclusive collection of men's fashion. Style that fits you perfectly.\r\n          </p>\r\n          <div v-if=\"loading\" class=\"loading\">Loading products...</div>\r\n          <div v-else class=\"product-grid\">\r\n            <div class=\"product-card\" v-for=\"product in products\" :key=\"product.id\">\r\n              <img :src=\"product.image\" :alt=\"product.name\" class=\"product-image\" />\r\n              <h2 class=\"product-name\">{{ product.name }}</h2>\r\n              <p class=\"product-price\">${{ product.price }}</p>\r\n              <button class=\"add-to-cart\">Add to Cart</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [], // Array to hold the products\r\n      cartItemCount: 0, // Initialize cart item count\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProducts(); // Fetch products when the component is created\r\n    this.updateCartItemCount(); // Update cart item count\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5555/products');\r\n        this.products = response.data.products; // Update the products array\r\n\r\n        // Sync products stock with items already in cart\r\n        const cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n        cart.forEach(item => {\r\n          const product = this.products.find(p => p.id === item.id);\r\n          if (product) {\r\n            product.stock -= item.quantity; // Reduce stock based on cart items\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    },\r\n    addToCart(product) {\r\n  // Ensure orderQuantity is valid\r\n  if (product.orderQuantity <= 0 || product.orderQuantity > product.stock) {\r\n    return; // Do nothing if quantity is invalid\r\n  }\r\n\r\n  // Get the current cart from localStorage\r\n  let cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n  // Check if the product is already in the cart\r\n  const existingProduct = cart.find(item => item.id === product.id);\r\n\r\n  // If product exists in cart, increase its quantity\r\n  if (existingProduct) {\r\n    existingProduct.quantity += product.orderQuantity;\r\n  } else {\r\n    // If product doesn't exist in the cart, add it\r\n    cart.push({ ...product, quantity: product.orderQuantity });\r\n  }\r\n\r\n  // Save the cart in localStorage\r\n  localStorage.setItem('cart', JSON.stringify(cart));\r\n\r\n  // Update the cart item count after adding product\r\n  this.updateCartItemCount();\r\n\r\n  // Optionally, reduce stock in the frontend (do not save this in localStorage or the database yet)\r\n  product.stock -= product.orderQuantity;\r\n\r\n  // Ensure stock doesn't go below 0\r\n  if (product.stock < 0) {\r\n    product.stock = 0;\r\n  }\r\n\r\n  // Reset orderQuantity to 1 after adding to cart\r\n  product.orderQuantity = 1; // Direct assignment without using this.$set\r\n\r\n  // Save updated products in localStorage (optional, for reloading the page)\r\n  const updatedProducts = this.products.map(p => {\r\n    if (p.id === product.id) {\r\n      return { ...p, stock: product.stock }; // Update stock for the added product\r\n    }\r\n    return p;\r\n  });\r\n  localStorage.setItem('products', JSON.stringify(updatedProducts));\r\n},\r\n\r\n    goToCart() {\r\n      this.$router.push('/cart'); // Navigate to the cart page\r\n    },\r\n    updateCartItemCount() {\r\n      const cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n      this.cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n.loading {\r\n  font-size: 18px;\r\n  color: #555;\r\n  text-align: center;\r\n  margin: 50px 0;\r\n}\r\n/* Global Styles */\r\nbody {\r\n  margin: 0;\r\n  font-family: \"Arial\", sans-serif;\r\n}\r\n\r\n/* Announcement Bar */\r\n.announcement-bar {\r\n  background-color: #070707;\r\n  color: #e33131;\r\n  text-align: center;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n/* Header */\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background: #fff;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.logo {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #000;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n}\r\n\r\n.nav-link {\r\n  margin: 0 15px;\r\n  text-decoration: none;\r\n  color: #333;\r\n  font-weight: bold;\r\n  position: relative;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.nav-link::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 0;\r\n  height: 2px;\r\n  background-color: rgb(255, 96, 56);\r\n  transition: width 0.3s;\r\n}\r\n\r\n.nav-link:hover::after,\r\n.nav-link.active::after {\r\n  width: 100%;\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #f75151;\r\n}\r\n\r\n/* User Controls */\r\n.user-controls {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.cart {\r\n  position: relative;\r\n  margin-right: 20px;\r\n}\r\n\r\n.cart .fa {\r\n  font-size: 20px;\r\n  color: #333;\r\n}\r\n\r\n.cart-count {\r\n  position: absolute;\r\n  top: -5px;\r\n  right: -10px;\r\n  background: #ff6f61;\r\n  color: #fff;\r\n  font-size: 12px;\r\n  padding: 3px 7px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.user-avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n}\r\n\r\n.user-menu {\r\n  position: relative;\r\n}\r\n\r\n.user-menu .dropdown {\r\n  display: none;\r\n  position: absolute;\r\n  top: 50px;\r\n  right: 0;\r\n  background: #fff;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.user-menu .dropdown a {\r\n  display: block;\r\n  padding: 10px 20px;\r\n  text-decoration: none;\r\n  color: #333;\r\n}\r\n\r\n.user-menu:hover .dropdown {\r\n  display: block;\r\n}\r\n\r\n/* Products Section */\r\n.products {\r\n  padding: 50px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\nh1 {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.description {\r\n  margin-bottom: 40px;\r\n  font-size: 18px;\r\n  color: #555;\r\n}\r\n\r\n.product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.product-card {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  height: auto;\r\n  margin-bottom: 15px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.product-name {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.product-price {\r\n  font-size: 16px;\r\n  color: #555;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.add-to-cart {\r\n  background-color: #ebcf35;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.add-to-cart:hover {\r\n  background-color: #63d031;\r\n}\r\n\r\n/* Fade Transition */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}