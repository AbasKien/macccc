{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"product-container\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"product-name\"\n};\nconst _hoisted_4 = {\n  class: \"product-description\"\n};\nconst _hoisted_5 = {\n  class: \"product-price\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"product-stock\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"product-stock-out\"\n};\nconst _hoisted_8 = [\"onClick\", \"disabled\"];\nconst _hoisted_9 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Product List\", -1 /* HOISTED */)), $data.products.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"product-card\",\n      key: product.id\n    }, [_createElementVNode(\"img\", {\n      src: `http://localhost:5555${product.image_url}`,\n      alt: \"Product Image\",\n      class: \"product-image\"\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"h2\", _hoisted_3, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(product.description), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, \"Price: $\" + _toDisplayString(product.price), 1 /* TEXT */), product.stock > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"Stock: \" + _toDisplayString(product.stock), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"Out of Stock\")), _createElementVNode(\"button\", {\n      onClick: $event => $options.addToCart(product),\n      class: \"add-to-cart\",\n      disabled: product.stock <= 0\n    }, \" Add to Cart \", 8 /* PROPS */, _hoisted_8)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"No products available at the moment.\"))]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","$data","products","length","_hoisted_1","_Fragment","_renderList","product","id","src","image_url","alt","_hoisted_2","_hoisted_3","_toDisplayString","name","_hoisted_4","description","_hoisted_5","price","stock","_hoisted_6","_hoisted_7","onClick","$event","$options","addToCart","disabled","_hoisted_8","_hoisted_9"],"sources":["C:\\laragon\\www\\admin_ecommerce\\vue\\src\\views\\product.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Product List</h1>\r\n\r\n    <div v-if=\"products.length > 0\" class=\"product-container\">\r\n      <div class=\"product-card\" v-for=\"product in products\" :key=\"product.id\">\r\n        <img :src=\"`http://localhost:5555${product.image_url}`\" alt=\"Product Image\" class=\"product-image\" />\r\n        <h2 class=\"product-name\">{{ product.name }}</h2>\r\n        <p class=\"product-description\">{{ product.description }}</p>\r\n        <p class=\"product-price\">Price: ${{ product.price }}</p>\r\n        <p class=\"product-stock\" v-if=\"product.stock > 0\">Stock: {{ product.stock }}</p>\r\n        <p class=\"product-stock-out\" v-else>Out of Stock</p>\r\n        <button \r\n          @click=\"addToCart(product)\" \r\n          class=\"add-to-cart\"\r\n          :disabled=\"product.stock <= 0\">\r\n          Add to Cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <p v-else>No products available at the moment.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [], // Array to hold the products\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProducts(); // Fetch products when the component is created\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      try {\r\n        // Fetch all products from the backend\r\n        const response = await axios.get('http://localhost:5555/products');\r\n        this.products = response.data.products; // Update the products array\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    },\r\n    addToCart(product) {\r\n      // Fetch the current cart from LocalStorage or initialize it as an empty array\r\n      let cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n      // Check if the product already exists in the cart\r\n      const existingProduct = cart.find(item => item.id === product.id);\r\n\r\n      if (existingProduct) {\r\n        // If the product exists, increase the quantity\r\n        existingProduct.quantity += 1;\r\n      } else {\r\n        // If the product does not exist, add it to the cart with quantity 1\r\n        cart.push({ ...product, quantity: 1 });\r\n      }\r\n\r\n      // Save the updated cart to LocalStorage\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n      console.log('Product added to cart:', product);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.product-card {\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  height: auto;\r\n  max-height: 200px;\r\n  object-fit: cover;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.product-name {\r\n  font-size: 1.5rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.product-description {\r\n  font-size: 1rem;\r\n  color: #666;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.product-price {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product-stock {\r\n  font-size: 1rem;\r\n  color: #4caf50;\r\n}\r\n\r\n.product-stock-out {\r\n  font-size: 1rem;\r\n  color: red;\r\n}\r\n\r\n.add-to-cart {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\n.add-to-cart:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.add-to-cart:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;EAIoCC,KAAK,EAAC;;mBAJ1C;;EAOYA,KAAK,EAAC;AAAc;;EACrBA,KAAK,EAAC;AAAqB;;EAC3BA,KAAK,EAAC;AAAe;;EAThCD,GAAA;EAUWC,KAAK,EAAC;;;EAVjBD,GAAA;EAWWC,KAAK,EAAC;;mBAXjB;;EAAAD,GAAA;AAAA;;uBACEE,mBAAA,CAqBM,c,0BApBJC,mBAAA,CAAqB,YAAjB,cAAY,sBAELC,KAAA,CAAAC,QAAQ,CAACC,MAAM,Q,cAA1BJ,mBAAA,CAeM,OAfNK,UAeM,I,kBAdJL,mBAAA,CAaMM,SAAA,QAlBZC,WAAA,CAKkDL,KAAA,CAAAC,QAAQ,EAAnBK,OAAO;yBAAxCR,mBAAA,CAaM;MAbDD,KAAK,EAAC,cAAc;MAA8BD,GAAG,EAAEU,OAAO,CAACC;QAClER,mBAAA,CAAoG;MAA9FS,GAAG,0BAA0BF,OAAO,CAACG,SAAS;MAAIC,GAAG,EAAC,eAAe;MAACb,KAAK,EAAC;4BAN1Fc,UAAA,GAOQZ,mBAAA,CAAgD,MAAhDa,UAAgD,EAAAC,gBAAA,CAApBP,OAAO,CAACQ,IAAI,kBACxCf,mBAAA,CAA4D,KAA5DgB,UAA4D,EAAAF,gBAAA,CAA1BP,OAAO,CAACU,WAAW,kBACrDjB,mBAAA,CAAwD,KAAxDkB,UAAwD,EAA/B,UAAQ,GAAAJ,gBAAA,CAAGP,OAAO,CAACY,KAAK,kBAClBZ,OAAO,CAACa,KAAK,Q,cAA5CrB,mBAAA,CAAgF,KAAhFsB,UAAgF,EAA9B,SAAO,GAAAP,gBAAA,CAAGP,OAAO,CAACa,KAAK,qB,cACzErB,mBAAA,CAAoD,KAApDuB,UAAoD,EAAhB,cAAY,IAChDtB,mBAAA,CAKS;MAJNuB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACnB,OAAO;MACzBT,KAAK,EAAC,aAAa;MAClB6B,QAAQ,EAAEpB,OAAO,CAACa,KAAK;OAAO,eAEjC,iBAjBRQ,UAAA,E;qDAqBI7B,mBAAA,CAAkD,KArBtD8B,UAAA,EAqBc,sCAAoC,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}