{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      otp: '',\n      error: null,\n      success: null\n    };\n  },\n  computed: {\n    // Validate OTP format (6 digits)\n    isValidOtp() {\n      return this.otp && /^\\d{6}$/.test(this.otp);\n    }\n  },\n  methods: {\n    async submitOtp() {\n      const email = this.$route.query.email;\n\n      // Check if email is available in the query\n      if (!email) {\n        this.error = 'Email is required to verify OTP.';\n        return;\n      }\n      try {\n        const response = await axios.post('/verify-otp', {\n          email: email,\n          otp: this.otp\n        });\n        this.success = response.data.message;\n        this.error = null;\n\n        // Redirect after successful verification\n        setTimeout(() => {\n          this.$router.push('/');\n        }, 2000);\n      } catch (error) {\n        this.error = error.response?.data?.message || 'Failed to verify OTP';\n        this.success = null;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","otp","error","success","computed","isValidOtp","test","methods","submitOtp","email","$route","query","response","post","message","setTimeout","$router","push"],"sources":["C:\\laragon\\www\\admin_ecommerce\\vue\\src\\views\\otp.vue"],"sourcesContent":["<template>\r\n    <div class=\"otp-container\">\r\n      <h2>Verify Your Account</h2>\r\n      <p>Please enter the OTP sent to your email to complete the verification process.</p>\r\n  \r\n      <form @submit.prevent=\"submitOtp\">\r\n        <div class=\"form-group\">\r\n          <label for=\"otp\">Enter OTP:</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"otp\" \r\n            v-model=\"otp\" \r\n            required \r\n            placeholder=\"Enter your OTP\" \r\n            maxlength=\"6\" \r\n            pattern=\"\\d{6}\" \r\n          />\r\n          <span v-if=\"otp && !otp.match(/^\\d{6}$/)\" class=\"error\">OTP must be 6 digits.</span>\r\n        </div>\r\n  \r\n        <button type=\"submit\" class=\"submit-btn\" :disabled=\"!isValidOtp\">Verify OTP</button>\r\n      </form>\r\n  \r\n      <p v-if=\"error\" class=\"error\">{{ error }}</p>\r\n      <p v-if=\"success\" class=\"success\">{{ success }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        otp: '',\r\n        error: null,\r\n        success: null,\r\n      };\r\n    },\r\n    computed: {\r\n      // Validate OTP format (6 digits)\r\n      isValidOtp() {\r\n        return this.otp && /^\\d{6}$/.test(this.otp);\r\n      }\r\n    },\r\n    methods: {\r\n      async submitOtp() {\r\n        const email = this.$route.query.email;\r\n  \r\n        // Check if email is available in the query\r\n        if (!email) {\r\n          this.error = 'Email is required to verify OTP.';\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await axios.post('/verify-otp', { \r\n            email: email, \r\n            otp: this.otp \r\n          });\r\n  \r\n          this.success = response.data.message;\r\n          this.error = null;\r\n  \r\n          // Redirect after successful verification\r\n          setTimeout(() => {\r\n            this.$router.push('/');\r\n          }, 2000);\r\n        } catch (error) {\r\n          this.error = error.response?.data?.message || 'Failed to verify OTP';\r\n          this.success = null;\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .otp-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    text-align: center;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .submit-btn {\r\n    width: 100%;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    background-color: #4CAF50;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .submit-btn:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .error {\r\n    color: red;\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .success {\r\n    color: green;\r\n    margin-top: 15px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AA6BE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACJ,GAAE,IAAK,SAAS,CAACK,IAAI,CAAC,IAAI,CAACL,GAAG,CAAC;IAC7C;EACF,CAAC;EACDM,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,MAAMC,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,KAAK;;MAErC;MACA,IAAI,CAACA,KAAK,EAAE;QACV,IAAI,CAACP,KAAI,GAAI,kCAAkC;QAC/C;MACF;MAEA,IAAI;QACF,MAAMU,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,aAAa,EAAE;UAC/CJ,KAAK,EAAEA,KAAK;UACZR,GAAG,EAAE,IAAI,CAACA;QACZ,CAAC,CAAC;QAEF,IAAI,CAACE,OAAM,GAAIS,QAAQ,CAACZ,IAAI,CAACc,OAAO;QACpC,IAAI,CAACZ,KAAI,GAAI,IAAI;;QAEjB;QACAa,UAAU,CAAC,MAAM;UACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC;MACV,EAAE,OAAOf,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACU,QAAQ,EAAEZ,IAAI,EAAEc,OAAM,IAAK,sBAAsB;QACpE,IAAI,CAACX,OAAM,GAAI,IAAI;MACrB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}