{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"otp-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"success\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Verify Your Account\", -1 /* HOISTED */)), _cache[4] || (_cache[4] = _createElementVNode(\"p\", null, \"Please enter the OTP sent to your email to complete the verification process.\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.submitOtp && $options.submitOtp(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"otp\"\n  }, \"Enter OTP:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"otp\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.otp = $event),\n    required: \"\",\n    placeholder: \"Enter your OTP\",\n    maxlength: \"6\",\n    pattern: \"\\\\d{6}\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.otp]]), $data.otp && !$data.otp.match(/^\\d{6}$/) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"OTP must be 6 digits.\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"submit-btn\",\n    disabled: !$options.isValidOtp\n  }, \"Verify OTP\", 8 /* PROPS */, _hoisted_4)], 32 /* NEED_HYDRATION */), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.success), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","submitOtp","_hoisted_2","for","type","id","$event","$data","otp","required","placeholder","maxlength","pattern","match","_hoisted_3","_createCommentVNode","disabled","isValidOtp","_hoisted_4","error","_hoisted_5","_toDisplayString","success","_hoisted_6"],"sources":["C:\\laragon\\www\\admin_ecommerce\\vue\\src\\views\\otp.vue"],"sourcesContent":["<template>\r\n    <div class=\"otp-container\">\r\n      <h2>Verify Your Account</h2>\r\n      <p>Please enter the OTP sent to your email to complete the verification process.</p>\r\n  \r\n      <form @submit.prevent=\"submitOtp\">\r\n        <div class=\"form-group\">\r\n          <label for=\"otp\">Enter OTP:</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"otp\" \r\n            v-model=\"otp\" \r\n            required \r\n            placeholder=\"Enter your OTP\" \r\n            maxlength=\"6\" \r\n            pattern=\"\\d{6}\" \r\n          />\r\n          <span v-if=\"otp && !otp.match(/^\\d{6}$/)\" class=\"error\">OTP must be 6 digits.</span>\r\n        </div>\r\n  \r\n        <button type=\"submit\" class=\"submit-btn\" :disabled=\"!isValidOtp\">Verify OTP</button>\r\n      </form>\r\n  \r\n      <p v-if=\"error\" class=\"error\">{{ error }}</p>\r\n      <p v-if=\"success\" class=\"success\">{{ success }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        otp: '',\r\n        error: null,\r\n        success: null,\r\n      };\r\n    },\r\n    computed: {\r\n      // Validate OTP format (6 digits)\r\n      isValidOtp() {\r\n        return this.otp && /^\\d{6}$/.test(this.otp);\r\n      }\r\n    },\r\n    methods: {\r\n      async submitOtp() {\r\n        const email = this.$route.query.email;\r\n  \r\n        // Check if email is available in the query\r\n        if (!email) {\r\n          this.error = 'Email is required to verify OTP.';\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await axios.post('/verify-otp', { \r\n            email: email, \r\n            otp: this.otp \r\n          });\r\n  \r\n          this.success = response.data.message;\r\n          this.error = null;\r\n  \r\n          // Redirect after successful verification\r\n          setTimeout(() => {\r\n            this.$router.push('/');\r\n          }, 2000);\r\n        } catch (error) {\r\n          this.error = error.response?.data?.message || 'Failed to verify OTP';\r\n          this.success = null;\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .otp-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    text-align: center;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .submit-btn {\r\n    width: 100%;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    background-color: #4CAF50;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .submit-btn:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .error {\r\n    color: red;\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .success {\r\n    color: green;\r\n    margin-top: 15px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAe;;EAKjBA,KAAK,EAAC;AAAY;;EAN/BC,GAAA;EAiBoDD,KAAK,EAAC;;mBAjB1D;;EAAAC,GAAA;EAuBsBD,KAAK,EAAC;;;EAvB5BC,GAAA;EAwBwBD,KAAK,EAAC;;;uBAvB1BE,mBAAA,CAwBM,OAxBNC,UAwBM,G,0BAvBJC,mBAAA,CAA4B,YAAxB,qBAAmB,sB,0BACvBA,mBAAA,CAAoF,WAAjF,+EAA6E,sBAEhFA,mBAAA,CAgBO;IAhBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALnBC,cAAA,KAAAC,IAAA,KAK6BC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;MAC9BJ,mBAAA,CAYM,OAZNO,UAYM,G,0BAXJP,mBAAA,CAAmC;IAA5BQ,GAAG,EAAC;EAAK,GAAC,YAAU,sB,gBAC3BR,mBAAA,CAQE;IAPAS,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,KAAK;IAVpB,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAWqBC,KAAA,CAAAC,GAAG,GAAAF,MAAA;IACZG,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC,gBAAgB;IAC5BC,SAAS,EAAC,GAAG;IACbC,OAAO,EAAC;iDAJCL,KAAA,CAAAC,GAAG,E,GAMFD,KAAA,CAAAC,GAAG,KAAKD,KAAA,CAAAC,GAAG,CAACK,KAAK,e,cAA7BpB,mBAAA,CAAoF,QAApFqB,UAAoF,EAA5B,uBAAqB,KAjBvFC,mBAAA,e,GAoBQpB,mBAAA,CAAoF;IAA5ES,IAAI,EAAC,QAAQ;IAACb,KAAK,EAAC,YAAY;IAAEyB,QAAQ,GAAGhB,QAAA,CAAAiB;KAAY,YAAU,iBApBnFC,UAAA,E,4BAuBeX,KAAA,CAAAY,KAAK,I,cAAd1B,mBAAA,CAA6C,KAA7C2B,UAA6C,EAAAC,gBAAA,CAAZd,KAAA,CAAAY,KAAK,oBAvB5CJ,mBAAA,gBAwBeR,KAAA,CAAAe,OAAO,I,cAAhB7B,mBAAA,CAAmD,KAAnD8B,UAAmD,EAAAF,gBAAA,CAAdd,KAAA,CAAAe,OAAO,oBAxBlDP,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}