{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      products: [],\n      // Array to store products\n      cartItemCount: 0,\n      // Tracks the cart item count\n      loading: true // Loading state\n    };\n  },\n  created() {\n    this.fetchProducts();\n    this.updateCartItemCount(); // Update cart count when the page loads\n  },\n  methods: {\n    // Fetch product data from the API\n    async fetchProducts() {\n      try {\n        const response = await axios.get(\"http://localhost:5555/products\");\n        this.products = response.data.products.map(product => ({\n          ...product,\n          orderQuantity: 1 // Initialize quantity input\n        }));\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    // Add product to the cart\n    addToCart(product) {\n      // Validate if quantity is greater than 0 and less than or equal to stock\n      if (product.orderQuantity <= 0 || product.orderQuantity > product.stock) {\n        return;\n      }\n\n      // Get cart from localStorage or create an empty array if not present\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n\n      // Check if the product is already in the cart\n      const existingProduct = cart.find(item => item.id === product.id);\n\n      // If product exists, update the quantity\n      if (existingProduct) {\n        existingProduct.quantity += product.orderQuantity;\n      } else {\n        // Add new product to the cart with its image URL and quantity\n        cart.push({\n          id: product.id,\n          name: product.name,\n          price: product.price,\n          image: `http://localhost:5555${product.image_url}`,\n          // Add image URL\n          quantity: product.orderQuantity\n        });\n      }\n\n      // Save updated cart to localStorage\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n\n      // Update the cart item count\n      this.updateCartItemCount();\n\n      // Reset the order quantity input to 1\n      product.orderQuantity = 1;\n    },\n    // Update the number of items in the cart (from localStorage)\n    updateCartItemCount() {\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n      this.cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);\n    },\n    // Increment quantity\n    incrementQuantity(product) {\n      if (product.orderQuantity < product.stock) {\n        product.orderQuantity++;\n      }\n    },\n    // Decrement quantity\n    decrementQuantity(product) {\n      if (product.orderQuantity > 1) {\n        product.orderQuantity--;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","cartItemCount","loading","created","fetchProducts","updateCartItemCount","methods","response","get","map","product","orderQuantity","error","console","addToCart","stock","cart","JSON","parse","localStorage","getItem","existingProduct","find","item","id","quantity","push","name","price","image","image_url","setItem","stringify","reduce","total","incrementQuantity","decrementQuantity"],"sources":["C:\\laragon\\www\\project_appdev\\Frontend\\src\\views\\product.vue"],"sourcesContent":["<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [], // Array to store products\r\n      cartItemCount: 0, // Tracks the cart item count\r\n      loading: true, // Loading state\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProducts();\r\n    this.updateCartItemCount(); // Update cart count when the page loads\r\n  },\r\n  methods: {\r\n    // Fetch product data from the API\r\n    async fetchProducts() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5555/products\");\r\n        this.products = response.data.products.map((product) => ({\r\n          ...product,\r\n          orderQuantity: 1, // Initialize quantity input\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // Add product to the cart\r\n    addToCart(product) {\r\n      // Validate if quantity is greater than 0 and less than or equal to stock\r\n      if (product.orderQuantity <= 0 || product.orderQuantity > product.stock) {\r\n        return;\r\n      }\r\n\r\n      // Get cart from localStorage or create an empty array if not present\r\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n\r\n      // Check if the product is already in the cart\r\n      const existingProduct = cart.find((item) => item.id === product.id);\r\n\r\n      // If product exists, update the quantity\r\n      if (existingProduct) {\r\n        existingProduct.quantity += product.orderQuantity;\r\n      } else {\r\n        // Add new product to the cart with its image URL and quantity\r\n        cart.push({\r\n          id: product.id,\r\n          name: product.name,\r\n          price: product.price,\r\n          image: `http://localhost:5555${product.image_url}`, // Add image URL\r\n          quantity: product.orderQuantity,\r\n        });\r\n      }\r\n\r\n      // Save updated cart to localStorage\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n\r\n      // Update the cart item count\r\n      this.updateCartItemCount();\r\n\r\n      // Reset the order quantity input to 1\r\n      product.orderQuantity = 1;\r\n    },\r\n\r\n    // Update the number of items in the cart (from localStorage)\r\n    updateCartItemCount() {\r\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n      this.cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n\r\n    // Increment quantity\r\n    incrementQuantity(product) {\r\n      if (product.orderQuantity < product.stock) {\r\n        product.orderQuantity++;\r\n      }\r\n    },\r\n\r\n    // Decrement quantity\r\n    decrementQuantity(product) {\r\n      if (product.orderQuantity > 1) {\r\n        product.orderQuantity--;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}