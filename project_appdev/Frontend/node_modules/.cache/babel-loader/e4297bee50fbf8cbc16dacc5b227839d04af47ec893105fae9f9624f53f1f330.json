{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  data() {\n    return {\n      cartItems: [] // Initialize an empty array for cart items\n    };\n  },\n  computed: {\n    // Calculate the total number of items in the cart\n    totalItems() {\n      return this.cartItems.reduce((sum, item) => sum + item.quantity, 0);\n    },\n    // Calculate the total cost of items in the cart\n    totalCost() {\n      return this.cartItems.reduce((sum, item) => sum + (Number(item.price) || 0) * item.quantity, 0);\n    }\n  },\n  methods: {\n    // Fetch cart items from the backend\n    async fetchCartItems() {\n      try {\n        const response = await fetch('http://localhost:5555/getCart'); // Replace with your backend URL\n        if (!response.ok) {\n          throw new Error('Failed to fetch cart items');\n        }\n        const data = await response.json();\n        this.cartItems = data.cartItems.map(item => ({\n          ...item,\n          price: Number(item.price) // Ensure price is a number\n        }));\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n        alert('Could not fetch cart items. Please try again later.');\n      }\n    },\n    // Increment the quantity of an item\n    async incrementQuantity(item) {\n      item.quantity++;\n      await this.updateCartOnBackend(item);\n    },\n    // Decrement the quantity of an item\n    async decrementQuantity(item) {\n      if (item.quantity > 1) {\n        item.quantity--;\n        await this.updateCartOnBackend(item);\n      }\n    },\n    // Remove an item from the cart\n    async removeItem(itemId) {\n      this.cartItems = this.cartItems.filter(item => item.id !== itemId);\n      await this.updateCartOnBackend(); // Sync the updated cart with the backend\n    },\n    // Update the cart on the backend\n    async updateCartOnBackend(updatedItem) {\n      try {\n        const response = await fetch('http://localhost:5555/updateCart', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            updatedItem,\n            cartItems: this.cartItems\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update cart');\n        }\n      } catch (error) {\n        console.error('Error updating cart:', error);\n        alert('Could not update the cart. Please try again.');\n      }\n    },\n    // Handle the checkout process\n    checkout() {\n      this.$router.push('/checkout'); // Navigate to the /checkout page\n    }\n  },\n  // Fetch the cart items when the component is created\n  created() {\n    this.fetchCartItems();\n  }\n};","map":{"version":3,"names":["data","cartItems","computed","totalItems","reduce","sum","item","quantity","totalCost","Number","price","methods","fetchCartItems","response","fetch","ok","Error","json","map","error","console","alert","incrementQuantity","updateCartOnBackend","decrementQuantity","removeItem","itemId","filter","id","updatedItem","method","headers","body","JSON","stringify","checkout","$router","push","created"],"sources":["C:\\laragon\\www\\project_appdev\\Frontend\\src\\views\\cart.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-page\">\r\n    <div class=\"cart-container\">\r\n      <!-- Shopping Cart Section -->\r\n      <div class=\"cart\">\r\n        <h2 class=\"cart-title\">Shopping Cart</h2>\r\n        <p class=\"cart-items-count\">{{ totalItems }} items</p>\r\n\r\n        <div v-if=\"cartItems.length > 0\" class=\"cart-items-list\">\r\n          <!-- Loop through cart items -->\r\n          <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\r\n            <img :src=\"item.image\" alt=\"Item image\" class=\"cart-item-image\" />\r\n            <div class=\"cart-item-details\">\r\n              <h3 class=\"item-name\">{{ item.name }}</h3>\r\n              <p class=\"item-price\">₱{{ (Number(item.price) || 0).toFixed(2) }}</p>\r\n              <div class=\"quantity-controls\">\r\n                <button @click=\"decrementQuantity(item)\">-</button>\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"item.quantity\"\r\n                  min=\"1\"\r\n                  class=\"quantity-input\"\r\n                />\r\n                <button @click=\"incrementQuantity(item)\">+</button>\r\n              </div>\r\n            </div>\r\n            <button @click=\"removeItem(item.id)\" class=\"remove-button\">✕</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else class=\"empty-cart\">\r\n          <p>Your cart is empty. Start shopping now!</p>\r\n        </div>\r\n\r\n        <a href=\"/product\" class=\"back-to-shop\">← Back to shop</a>\r\n      </div>\r\n\r\n      <!-- Summary Section -->\r\n      <div class=\"summary\">\r\n        <h2 class=\"summary-title\">Summary</h2>\r\n        <div class=\"summary-item\">\r\n          <span>ITEMS {{ totalItems }}</span>\r\n          <span>₱{{ totalCost.toFixed(2) }}</span>\r\n        </div>\r\n        <div class=\"summary-item\">\r\n          <label for=\"shipping\">SHIPPING</label>\r\n          <select id=\"shipping\" class=\"shipping-select\">\r\n            <option value=\"58\">Standard Delivery - ₱58.00</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"summary-item\">\r\n          <label for=\"give-code\">Voucher</label> <br>\r\n          <div class=\"give-code-container\">\r\n            <input type=\"text\" id=\"give-code\" placeholder=\"Enter your code\" />\r\n            <button>→</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"summary-total\">\r\n          <span>TOTAL PRICE</span>\r\n          <span>₱{{ (totalCost + 58).toFixed(2) }}</span>\r\n        </div>\r\n        <button @click=\"checkout\" class=\"checkout-button\">CHECKOUT</button>\r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartItems: [], // Initialize an empty array for cart items\r\n    };\r\n  },\r\n  computed: {\r\n    // Calculate the total number of items in the cart\r\n    totalItems() {\r\n      return this.cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n    },\r\n    // Calculate the total cost of items in the cart\r\n    totalCost() {\r\n      return this.cartItems.reduce(\r\n        (sum, item) => sum + (Number(item.price) || 0) * item.quantity,\r\n        0\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n  // Fetch cart items from the backend\r\n  async fetchCartItems() {\r\n    try {\r\n      const response = await fetch('http://localhost:5555/getCart'); // Replace with your backend URL\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch cart items');\r\n      }\r\n\r\n      const data = await response.json();\r\n      this.cartItems = data.cartItems.map((item) => ({\r\n        ...item,\r\n        price: Number(item.price), // Ensure price is a number\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching cart items:', error);\r\n      alert('Could not fetch cart items. Please try again later.');\r\n    }\r\n  },\r\n\r\n  // Increment the quantity of an item\r\n  async incrementQuantity(item) {\r\n    item.quantity++;\r\n    await this.updateCartOnBackend(item);\r\n  },\r\n\r\n  // Decrement the quantity of an item\r\n  async decrementQuantity(item) {\r\n    if (item.quantity > 1) {\r\n      item.quantity--;\r\n      await this.updateCartOnBackend(item);\r\n    }\r\n  },\r\n\r\n  // Remove an item from the cart\r\n  async removeItem(itemId) {\r\n    this.cartItems = this.cartItems.filter((item) => item.id !== itemId);\r\n    await this.updateCartOnBackend(); // Sync the updated cart with the backend\r\n  },\r\n\r\n  // Update the cart on the backend\r\n  async updateCartOnBackend(updatedItem) {\r\n    try {\r\n      const response = await fetch('http://localhost:5555/updateCart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ updatedItem, cartItems: this.cartItems }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update cart');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating cart:', error);\r\n      alert('Could not update the cart. Please try again.');\r\n    }\r\n  },\r\n\r\n  // Handle the checkout process\r\n  checkout() {\r\n    this.$router.push('/checkout'); // Navigate to the /checkout page\r\n  },\r\n},\r\n\r\n// Fetch the cart items when the component is created\r\ncreated() {\r\n  this.fetchCartItems();\r\n},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cart-page {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 30px;\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.cart-container {\r\n  display: flex;\r\n  width: 90%;\r\n  max-width: 1200px;\r\n  gap: 30px;\r\n}\r\n\r\n.cart {\r\n  flex: 2;\r\n  background-color: #fff;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.cart-title {\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.cart-items-count {\r\n  font-size: 1rem;\r\n  color: #666;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.cart-items-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.cart-item-image {\r\n  width: 20px;\r\n  height: 20px;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-details {\r\n  flex: 1;\r\n  margin-left: 15px;\r\n}\r\n\r\n.item-name {\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.item-price {\r\n  color: #888;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.quantity-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.quantity-input {\r\n  width: 50px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.remove-button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: #888;\r\n  cursor: pointer;\r\n}\r\n\r\n.remove-button:hover {\r\n  color: #f00;\r\n}\r\n\r\n.back-to-shop {\r\n  display: inline-block;\r\n  margin-top: 30px;\r\n  color: #141516;\r\n  text-decoration: none;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.back-to-shop:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.summary {\r\n  flex: 1;\r\n  background-color: #f7f7f7;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  text-align: left;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.summary-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.summary-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  font-size: 1rem;\r\n  color: #333;\r\n}\r\n\r\n.shipping-select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 10px;\r\n  border: 1px solid #ddd;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n}\r\n\r\n.give-code-container {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.give-code-container input {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.give-code-container button {\r\n  background-color: #000;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 0 20px;\r\n  font-size: 1rem;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.give-code-container button:hover {\r\n  background-color: #333;\r\n}\r\n\r\n.summary-total {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin-top: 30px;\r\n}\r\n\r\n.checkout-button {\r\n  width: 100%;\r\n  padding: 15px;\r\n  margin-top: 20px;\r\n  background-color: #000;\r\n  color: #fff;\r\n  font-size: 1.1rem;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.checkout-button:hover {\r\n  background-color: #333;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}