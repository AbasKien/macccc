{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"cart-page\"\n};\nconst _hoisted_2 = {\n  class: \"cart-section\"\n};\nconst _hoisted_3 = {\n  class: \"cart-content\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"cart-items\"\n};\nconst _hoisted_5 = [\"src\", \"alt\"];\nconst _hoisted_6 = {\n  class: \"cart-item-info\"\n};\nconst _hoisted_7 = {\n  class: \"quantity-container\"\n};\nconst _hoisted_8 = [\"onUpdate:modelValue\", \"max\", \"onChange\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"total-price\"\n};\nconst _hoisted_11 = {\n  class: \"cart-summary\"\n};\nconst _hoisted_12 = {\n  class: \"total-items\"\n};\nconst _hoisted_13 = {\n  class: \"total-cost\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Top Announcement Bar \"), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"announcement-bar\"\n  }, \" Free shipping, 30-day return or refund guarantee. \", -1 /* HOISTED */)), _createCommentVNode(\" Cart Section \"), _createElementVNode(\"section\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"Your Cart\", -1 /* HOISTED */)), _createCommentVNode(\" Cart Items \"), $data.cartItems.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"cart-item\"\n    }, [_createElementVNode(\"img\", {\n      src: `http://localhost:5555${item.image_url}`,\n      alt: item.name,\n      class: \"cart-item-image\"\n    }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h2\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Price: $\" + _toDisplayString(item.price), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.quantity = $event,\n      min: \"1\",\n      max: item.stock,\n      onChange: $event => _ctx.updateQuantity(item),\n      class: \"quantity-input\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_8), [[_vModelText, item.quantity, void 0, {\n      number: true\n    }]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeItem(item),\n      class: \"remove-item\"\n    }, \"Remove\", 8 /* PROPS */, _hoisted_9)]), _createElementVNode(\"p\", _hoisted_10, \"Total: $\" + _toDisplayString((item.price * item.quantity).toFixed(2)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Cart Total Summary \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"p\", _hoisted_12, \"Total Items: \" + _toDisplayString($options.totalItems), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_13, \"Total Cost: $\" + _toDisplayString($options.totalCost.toFixed(2)), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.checkout && $options.checkout(...args)),\n    class: \"checkout-button\"\n  }, \"Proceed to Checkout\")])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Empty Cart Message \"), _cache[1] || (_cache[1] = _createElementVNode(\"p\", {\n    class: \"empty-cart-message\"\n  }, \"Your cart is empty. Start shopping now!\", -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","$data","cartItems","length","_hoisted_4","_Fragment","_renderList","item","id","src","image_url","alt","name","_hoisted_5","_hoisted_6","_toDisplayString","price","_hoisted_7","type","$event","quantity","min","max","stock","onChange","_ctx","updateQuantity","_hoisted_8","number","onClick","$options","removeItem","_hoisted_9","_hoisted_10","toFixed","_hoisted_11","_hoisted_12","totalItems","_hoisted_13","totalCost","_cache","args","checkout"],"sources":["C:\\laragon\\www\\project_appdev\\Frontend\\src\\views\\cart.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-page\">\r\n    <!-- Top Announcement Bar -->\r\n    <div class=\"announcement-bar\">\r\n      Free shipping, 30-day return or refund guarantee.\r\n    </div>\r\n\r\n    <!-- Cart Section -->\r\n    <section class=\"cart-section\">\r\n      <div class=\"cart-content\">\r\n        <h1>Your Cart</h1>\r\n        \r\n        <!-- Cart Items -->\r\n        <div v-if=\"cartItems.length > 0\" class=\"cart-items\">\r\n          <div\r\n            v-for=\"item in cartItems\"\r\n            :key=\"item.id\"\r\n            class=\"cart-item\"\r\n          >\r\n            <img\r\n              :src=\"`http://localhost:5555${item.image_url}`\"\r\n              :alt=\"item.name\"\r\n              class=\"cart-item-image\"\r\n            />\r\n            <div class=\"cart-item-info\">\r\n              <h2>{{ item.name }}</h2>\r\n              <p>Price: ${{ item.price }}</p>\r\n              <div class=\"quantity-container\">\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"item.quantity\"\r\n                  min=\"1\"\r\n                  :max=\"item.stock\"\r\n                  @change=\"updateQuantity(item)\"\r\n                  class=\"quantity-input\"\r\n                />\r\n                <button @click=\"removeItem(item)\" class=\"remove-item\">Remove</button>\r\n              </div>\r\n              <p class=\"total-price\">Total: ${{ (item.price * item.quantity).toFixed(2) }}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Cart Total Summary -->\r\n          <div class=\"cart-summary\">\r\n            <p class=\"total-items\">Total Items: {{ totalItems }}</p>\r\n            <p class=\"total-cost\">Total Cost: ${{ totalCost.toFixed(2) }}</p>\r\n            <button @click=\"checkout\" class=\"checkout-button\">Proceed to Checkout</button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Empty Cart Message -->\r\n        <p v-else class=\"empty-cart-message\">Your cart is empty. Start shopping now!</p>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; // Import axios\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartItems: [], // Cart items stored in the state\r\n    };\r\n  },\r\n  computed: {\r\n    totalItems() {\r\n      return this.cartItems.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n    totalCost() {\r\n      return this.cartItems.reduce(\r\n        (total, item) => total + item.price * item.quantity,\r\n        0\r\n      );\r\n    },\r\n  },\r\n  created() {\r\n    this.loadCart();\r\n  },\r\n  methods: {\r\n    // Load cart items from localStorage\r\n    loadCart() {\r\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n      // Assume that you fetch the product details from the server or have them preloaded\r\n      cart.forEach((cartItem) => {\r\n        // For demonstration, assuming a dummy API that fetches the product details by id\r\n        axios.get(`http://localhost:5555/getCart/${user.id}`).then((response) => {\r\n          const product = response.data;\r\n          this.cartItems.push({\r\n            ...product,\r\n            quantity: cartItem.quantity, // Set the quantity based on what's stored in cart\r\n          });\r\n        });\r\n      });\r\n    },\r\n    updateCartItemCount() {\r\n  const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n  this.cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);\r\n},\r\n\r\n    // Remove an item from the cart\r\n    removeItem(item) {\r\n      this.cartItems = this.cartItems.filter((cartItem) => cartItem.id !== item.id);\r\n      this.updateLocalStorage();\r\n    },\r\n    // Update the cart in localStorage after any changes\r\n    updateLocalStorage() {\r\n      const updatedCart = this.cartItems.map((item) => ({\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n      }));\r\n      localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n    },\r\n    // Handle checkout action (you can extend this function to integrate with a payment API)\r\n    checkout() {\r\n      alert(\"Proceeding to checkout...\");\r\n      // You can redirect to the checkout page here, or integrate with a payment gateway\r\n      this.$router.push(\"/checkout\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Cart Page Styles */\r\n.cart-page {\r\n  background-color: #f9f9f9;\r\n  padding: 50px;\r\n}\r\n\r\n.announcement-bar {\r\n  background-color: #070707;\r\n  color: #e33131;\r\n  text-align: center;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.cart-content {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh1 {\r\n  font-size: 36px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.cart-items {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.cart-item-image {\r\n  width: 120px;\r\n  height: 120px;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-info {\r\n  flex: 1;\r\n  padding-left: 15px;\r\n}\r\n\r\n.cart-item-info h2 {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.cart-item-info p {\r\n  font-size: 16px;\r\n  color: #555;\r\n}\r\n\r\n.quantity-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.quantity-input {\r\n  width: 60px;\r\n  padding: 5px;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.remove-item {\r\n  background-color: #ff6f61;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.remove-item:hover {\r\n  background-color: #e04e47;\r\n}\r\n\r\n.total-price {\r\n  font-size: 16px;\r\n  color: #555;\r\n  margin-top: 10px;\r\n}\r\n\r\n.cart-summary {\r\n  margin-top: 30px;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.total-items,\r\n.total-cost {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.checkout-button {\r\n  background-color: #ebcf35;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.checkout-button:hover {\r\n  background-color: #63d031;\r\n}\r\n\r\n.empty-cart-message {\r\n  font-size: 18px;\r\n  color: #555;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAOXA,KAAK,EAAC;AAAc;;EACtBA,KAAK,EAAC;AAAc;;EAT/BC,GAAA;EAayCD,KAAK,EAAC;;mBAb/C;;EAwBiBA,KAAK,EAAC;AAAgB;;EAGpBA,KAAK,EAAC;AAAoB;mBA3B7C;mBAAA;;EAsCiBA,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAY;;uBA5C/BE,mBAAA,CAqDM,OArDNC,UAqDM,GApDJC,mBAAA,0BAA6B,E,0BAC7BC,mBAAA,CAEM;IAFDL,KAAK,EAAC;EAAkB,GAAC,qDAE9B,sBAEAI,mBAAA,kBAAqB,EACrBC,mBAAA,CA6CU,WA7CVC,UA6CU,GA5CRD,mBAAA,CA2CM,OA3CNE,UA2CM,G,0BA1CJF,mBAAA,CAAkB,YAAd,WAAS,sBAEbD,mBAAA,gBAAmB,EACRI,KAAA,CAAAC,SAAS,CAACC,MAAM,Q,cAA3BR,mBAAA,CAmCM,OAnCNS,UAmCM,I,kBAlCJT,mBAAA,CA0BMU,SAAA,QAxChBC,WAAA,CAe2BL,KAAA,CAAAC,SAAS,EAAjBK,IAAI;yBADbZ,mBAAA,CA0BM;MAxBHD,GAAG,EAAEa,IAAI,CAACC,EAAE;MACbf,KAAK,EAAC;QAENK,mBAAA,CAIE;MAHCW,GAAG,0BAA0BF,IAAI,CAACG,SAAS;MAC3CC,GAAG,EAAEJ,IAAI,CAACK,IAAI;MACfnB,KAAK,EAAC;4BAtBpBoB,UAAA,GAwBYf,mBAAA,CAeM,OAfNgB,UAeM,GAdJhB,mBAAA,CAAwB,YAAAiB,gBAAA,CAAjBR,IAAI,CAACK,IAAI,kBAChBd,mBAAA,CAA+B,WAA5B,UAAQ,GAAAiB,gBAAA,CAAGR,IAAI,CAACS,KAAK,kBACxBlB,mBAAA,CAUM,OAVNmB,UAUM,G,gBATJnB,mBAAA,CAOE;MANAoB,IAAI,EAAC,QAAQ;MA7B/B,uBAAAC,MAAA,IA8BkCZ,IAAI,CAACa,QAAQ,GAAAD,MAAA;MAC7BE,GAAG,EAAC,GAAG;MACNC,GAAG,EAAEf,IAAI,CAACgB,KAAK;MACfC,QAAM,EAAAL,MAAA,IAAEM,IAAA,CAAAC,cAAc,CAACnB,IAAI;MAC5Bd,KAAK,EAAC;6CAlCxBkC,UAAA,I,cA8BkCpB,IAAI,CAACa,QAAQ,E;MAArBQ,MAAM,EAAd;IAA8B,E,IAMhC9B,mBAAA,CAAqE;MAA5D+B,OAAK,EAAAV,MAAA,IAAEW,QAAA,CAAAC,UAAU,CAACxB,IAAI;MAAGd,KAAK,EAAC;OAAc,QAAM,iBApC5EuC,UAAA,E,GAsCclC,mBAAA,CAAgF,KAAhFmC,WAAgF,EAAzD,UAAQ,GAAAlB,gBAAA,EAAIR,IAAI,CAACS,KAAK,GAAGT,IAAI,CAACa,QAAQ,EAAEc,OAAO,oB;kCAI1ErC,mBAAA,wBAA2B,EAC3BC,mBAAA,CAIM,OAJNqC,WAIM,GAHJrC,mBAAA,CAAwD,KAAxDsC,WAAwD,EAAjC,eAAa,GAAArB,gBAAA,CAAGe,QAAA,CAAAO,UAAU,kBACjDvC,mBAAA,CAAiE,KAAjEwC,WAAiE,EAA3C,eAAa,GAAAvB,gBAAA,CAAGe,QAAA,CAAAS,SAAS,CAACL,OAAO,qBACvDpC,mBAAA,CAA8E;IAArE+B,OAAK,EAAAW,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEX,QAAA,CAAAY,QAAA,IAAAZ,QAAA,CAAAY,QAAA,IAAAD,IAAA,CAAQ;IAAEhD,KAAK,EAAC;KAAkB,qBAAmB,E,sBAKzEE,mBAAA,CAAgFU,SAAA;IAnDxFX,GAAA;EAAA,IAkDQG,mBAAA,wBAA2B,E,0BAC3BC,mBAAA,CAAgF;IAAtEL,KAAK,EAAC;EAAoB,GAAC,yCAAuC,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}