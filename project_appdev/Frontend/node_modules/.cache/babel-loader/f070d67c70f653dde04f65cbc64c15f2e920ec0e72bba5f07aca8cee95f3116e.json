{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"otp-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"success\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Verify Your Account\", -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"p\", null, \"Please enter the OTP sent to your email to complete the verification process.\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.submitOtp && $options.submitOtp(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"otp\"\n  }, \"Enter OTP:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"otp\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.otp = $event),\n    required: \"\",\n    placeholder: \"Enter your OTP\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.otp]])]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"submit-btn\"\n  }, \"Verify OTP\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.success), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","submitOtp","_hoisted_2","for","type","id","$event","$data","otp","required","placeholder","error","_hoisted_3","_toDisplayString","_createCommentVNode","success","_hoisted_4"],"sources":["C:\\laragon\\www\\admin_ecommerce\\vue\\src\\views\\otp.vue"],"sourcesContent":["<template>\r\n    <div class=\"otp-container\">\r\n      <h2>Verify Your Account</h2>\r\n      <p>Please enter the OTP sent to your email to complete the verification process.</p>\r\n      \r\n      <form @submit.prevent=\"submitOtp\">\r\n        <div class=\"form-group\">\r\n          <label for=\"otp\">Enter OTP:</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"otp\" \r\n            v-model=\"otp\" \r\n            required \r\n            placeholder=\"Enter your OTP\"\r\n          />\r\n        </div>\r\n  \r\n        <button type=\"submit\" class=\"submit-btn\">Verify OTP</button>\r\n      </form>\r\n  \r\n      <p v-if=\"error\" class=\"error\">{{ error }}</p>\r\n      <p v-if=\"success\" class=\"success\">{{ success }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        otp: '',\r\n        error: null,\r\n        success: null,\r\n      };\r\n    },\r\n    methods: {\r\n      async submitOtp() {\r\n        try {\r\n          const response = await axios.post('http://localhost:5555/verify-otp', { otp: this.otp });\r\n          this.success = response.data.message;\r\n          this.error = null;\r\n          // Redirect after successful verification, if necessary\r\n          setTimeout(() => {\r\n            this.$router.push('/');\r\n          }, 2000);\r\n        } catch (error) {\r\n          this.error = error.response?.data?.message || 'Failed to verify OTP';\r\n          this.success = null;\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .otp-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    text-align: center;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .submit-btn {\r\n    width: 100%;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    background-color: #4CAF50;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .submit-btn:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .error {\r\n    color: red;\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .success {\r\n    color: green;\r\n    margin-top: 15px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAe;;EAKjBA,KAAK,EAAC;AAAY;;EAN/BC,GAAA;EAoBsBD,KAAK,EAAC;;;EApB5BC,GAAA;EAqBwBD,KAAK,EAAC;;;uBApB1BE,mBAAA,CAqBM,OArBNC,UAqBM,G,0BApBJC,mBAAA,CAA4B,YAAxB,qBAAmB,sB,0BACvBA,mBAAA,CAAoF,WAAjF,+EAA6E,sBAEhFA,mBAAA,CAaO;IAbAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALnBC,cAAA,KAAAC,IAAA,KAK6BC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;MAC9BJ,mBAAA,CASM,OATNO,UASM,G,0BARJP,mBAAA,CAAmC;IAA5BQ,GAAG,EAAC;EAAK,GAAC,YAAU,sB,gBAC3BR,mBAAA,CAME;IALAS,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,KAAK;IAVpB,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAWqBC,KAAA,CAAAC,GAAG,GAAAF,MAAA;IACZG,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHH,KAAA,CAAAC,GAAG,E,+BAMhBb,mBAAA,CAA4D;IAApDS,IAAI,EAAC,QAAQ;IAACb,KAAK,EAAC;KAAa,YAAU,qB,4BAG5CgB,KAAA,CAAAI,KAAK,I,cAAdlB,mBAAA,CAA6C,KAA7CmB,UAA6C,EAAAC,gBAAA,CAAZN,KAAA,CAAAI,KAAK,oBApB5CG,mBAAA,gBAqBeP,KAAA,CAAAQ,OAAO,I,cAAhBtB,mBAAA,CAAmD,KAAnDuB,UAAmD,EAAAH,gBAAA,CAAdN,KAAA,CAAAQ,OAAO,oBArBlDD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}