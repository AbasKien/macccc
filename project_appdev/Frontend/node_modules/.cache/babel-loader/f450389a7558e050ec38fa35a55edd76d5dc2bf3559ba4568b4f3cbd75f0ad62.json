{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      products: [] // Array to hold the products\n    };\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        // Fetch all products from the backend\n        const response = await axios.get('http://localhost:5555/products');\n        this.products = response.data.products; // This updates the products array\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    addToCart(product) {\n      // Add to cart logic\n      console.log('Adding to cart:', product);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","created","fetchProducts","methods","response","get","error","console","addToCart","product","log"],"sources":["C:\\laragon\\www\\admin_ecommerce\\vue\\src\\views\\product.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Product List</h1>\r\n  \r\n      <div v-if=\"products.length > 0\" class=\"product-container\">\r\n        <div class=\"product-card\" v-for=\"product in products\" :key=\"product.id\">\r\n  <img :src=\"product.image_url\" alt=\"Product Image\" class=\"product-image\" />\r\n  <h2 class=\"product-name\">{{ product.name }}</h2>\r\n  <p class=\"product-description\">{{ product.description }}</p>\r\n  <p class=\"product-price\">Price: ${{ product.price }}</p>\r\n  <button @click=\"addToCart(product)\" class=\"add-to-cart\">Add to Cart</button>\r\n</div>\r\n\r\n      </div>\r\n  \r\n      <p v-else>No products available at the moment.</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        products: [], // Array to hold the products\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchProducts(); // Fetch products when the component is created\r\n    },\r\n    methods: {\r\n      async fetchProducts() {\r\n        try {\r\n          // Fetch all products from the backend\r\n          const response = await axios.get('http://localhost:5555/products');\r\n          this.products = response.data.products;  // This updates the products array\r\n        } catch (error) {\r\n          console.error('Error fetching products:', error);\r\n        }\r\n      },\r\n      addToCart(product) {\r\n        // Add to cart logic\r\n        console.log('Adding to cart:', product);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .product-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 20px;\r\n  }\r\n  \r\n  .product-card {\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .product-image {\r\n    width: 100%;\r\n    height: auto;\r\n    max-height: 200px;\r\n    object-fit: cover;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .product-name {\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .product-description {\r\n    font-size: 1rem;\r\n    color: #666;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .product-price {\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .add-to-cart {\r\n    background-color: #4caf50;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .add-to-cart:hover {\r\n    background-color: #45a049;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAoBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF;QACA,MAAME,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,gCAAgC,CAAC;QAClE,IAAI,CAACL,QAAO,GAAII,QAAQ,CAACL,IAAI,CAACC,QAAQ,EAAG;MAC3C,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDE,SAASA,CAACC,OAAO,EAAE;MACjB;MACAF,OAAO,CAACG,GAAG,CAAC,iBAAiB,EAAED,OAAO,CAAC;IACzC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}